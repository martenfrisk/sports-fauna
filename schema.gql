enum UserRole {
	ADMIN
	GUEST
	MEMBER
}

type User {
	username: String! @unique
  email: String! @unique
	favTeam: String
	leagues: [League] @relation
	role: UserRole
}

type League {
	name: String! 
	slug: String! @unique
	members: [User] @relation
	options: LeagueOptions!
	standings: [Standings] @relation
}

type Standings {
	member: User @relation
	points: Int
	league: League @relation
}

enum LeagueType {
	SINGLETEAM
	SINGLEDIVISION
	MULTITEAM
	MULTIDIVISION
	ANY
}

type Event {
	eventId: String @unique
	lastUpdate: String
	homeTeamName: String
	awayTeamName: String
	homeTeamId: String
	awayTeamId: String
	dateTime: String
	venue: String
	divisionId: DivisionType
	divisionName: String
}

type TeamType {
	teamId: String @unique
	teamName: String
	division: [DivisionType] @relation
	badge: String
	country: String
	events: [String]
	inLeagues: [LeagueOptions]
}

type DivisionType {
	divisionId: String @unique
	divisionName: String
	country: String
	teams: [TeamType] @relation
	events: [Event] @relation
}

type LeagueOptions {
	class: LeagueType
	divisions: [String]
	teams: [TeamType]
	public: Boolean
}

type Query {
	allUsers: [User!]
	allLeagues: [League]
	allEvents: [Event!]
	allTeams: [TeamType!]
	findLeague(slug: String!): League! @resolver(name: "findLeague", paginated: true)
}
