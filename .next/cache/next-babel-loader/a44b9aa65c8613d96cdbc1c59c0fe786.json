{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/edit-user.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation UpdateAUser($id: ID!, $email: String!, $favTeam: String) {\\n        updateUser(id: $id, data: { email: $email, favTeam: $favTeam}) {\\n          email\\n          favTeam\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react'; // import Router from 'next/router'\n\nimport { gql } from 'graphql-request';\nimport { useForm } from 'react-hook-form';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nvar EditUser = function EditUser(_ref) {\n  _s();\n\n  var defaultValues = _ref.defaultValues,\n      id = _ref.id,\n      token = _ref.token;\n\n  var _useState = useState(''),\n      errorMessage = _useState[0],\n      setErrorMessage = _useState[1];\n\n  var _useState2 = useState(''),\n      updateMessage = _useState2[0],\n      setUpdateMessage = _useState2[1]; // const fetcher = async (query) => await graphQLClient(token).request(query)\n  // const { data, error } = useSWR('/api/user', fetcher)\n\n\n  var _useForm = useForm({\n    defaultValues: _objectSpread({}, defaultValues)\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var email, favTeam, query, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref2.email, favTeam = _ref2.favTeam;\n              if (errorMessage) setErrorMessage('');\n              query = gql(_templateObject());\n              variables = {\n                id: id,\n                email: email,\n                favTeam: favTeam\n              };\n              console.log(query);\n              _context.prev = 5;\n              _context.next = 8;\n              return graphQLClient(token).request(query, variables);\n\n            case 8:\n              setUpdateMessage(function () {\n                return 'Profile updated';\n              });\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0);\n              setErrorMessage(_context.t0.message);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  useEffect(function () {\n    reset(defaultValues);\n  }, [reset, defaultValues]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          ref: register({\n            required: 'Email is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, _this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Favorite Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"favTeam\",\n          ref: register()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, _this), errors.favTeam && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          children: errors.favTeam.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, _this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, _this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(EditUser, \"+XNAP6CXGCk5gGTzL+BQQ9TccrA=\", false, function () {\n  return [useForm];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/edit-user.tsx"],"names":["useState","useEffect","gql","useForm","graphQLClient","EditUser","defaultValues","id","token","errorMessage","setErrorMessage","updateMessage","setUpdateMessage","handleSubmit","register","reset","errors","onSubmit","email","favTeam","query","variables","console","log","request","error","message","required"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n// import Router from 'next/router'\nimport { gql } from 'graphql-request'\nimport { useForm } from 'react-hook-form'\nimport { graphQLClient } from '@/utils/graphql-client'\n\nconst EditUser = ({ defaultValues, id, token }: { defaultValues: any, id: any, token: any }) => {\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [updateMessage, setUpdateMessage] = useState('')\n\t// const fetcher = async (query) => await graphQLClient(token).request(query)\n\t// const { data, error } = useSWR('/api/user', fetcher)\n\n\tconst { handleSubmit, register, reset, errors } = useForm({\n\t\tdefaultValues: {\n\t\t\t...defaultValues,\n\t\t},\n\t})\n\n\tconst onSubmit = handleSubmit(async ({ email, favTeam }) => {\n\t\tif (errorMessage) setErrorMessage('')\n\n\t\tconst query = gql`\n      mutation UpdateAUser($id: ID!, $email: String!, $favTeam: String) {\n        updateUser(id: $id, data: { email: $email, favTeam: $favTeam}) {\n          email\n          favTeam\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid,\n\t\t\temail,\n\t\t\tfavTeam,\n\t\t}\n\n\t\tconsole.log(query)\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, variables)\n\t\t\tsetUpdateMessage(() => 'Profile updated')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t}) \n\n\tuseEffect(() => {\n\t\treset(defaultValues)\n\t}, [reset, defaultValues])\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>Task</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tref={register({ required: 'Email is required' })}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t<span role=\"alert\">\n\t\t\t\t\t\t\t{errors.email.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Favorite Team</label>\n\t\t\t\t\t<input type=\"text\" name=\"favTeam\" ref={register()} />\n\t\t\t\t\t{errors.favTeam && (\n\t\t\t\t\t\t<span role=\"alert\">\n\t\t\t\t\t\t\t{errors.favTeam.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"submit\">Update</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t{updateMessage && (\n\t\t\t\t<p role=\"alert\">\n\t\t\t\t\t{updateMessage}\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<p role=\"alert\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default EditUser"]},"metadata":{},"sourceType":"module"}