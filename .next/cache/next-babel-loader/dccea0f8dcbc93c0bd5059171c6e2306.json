{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/index.tsx\";\nimport useSWR from 'swr';\nimport Link from 'next/link';\nimport { gql } from 'graphql-request';\nimport Layout from '../components/layout';\nimport { graphQLClient } from '../utils/graphql-client';\n\nconst Home = ({\n  token\n}) => {\n  const fetcher = async query => await graphQLClient(token).request(query);\n\n  const {\n    data,\n    error,\n    mutate\n  } = useSWR(gql`\n      {\n        allTodos {\n          data {\n            _id\n            task\n            completed\n          }\n        }    \n      }\n    `, fetcher);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 20\n  }, this);\n\n  const toggleTodo = async (id, completed) => {\n    const query = gql`\n      mutation PartialUpdateTodo($id: ID!, $completed: Boolean!) {\n        partialUpdateTodo(id: $id, data: { completed: $completed }) {\n          _id\n          completed\n        }\n      }\n    `;\n    const variables = {\n      id,\n      completed: !completed\n    };\n\n    try {\n      await graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(query, variables);\n      mutate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteATodo = async id => {\n    const query = gql`\n      mutation DeleteATodo($id: ID!) {\n        deleteTodo(id: $id) {\n          _id\n        }\n      }\n    `;\n\n    try {\n      await graphQLClient(token).request(query, {\n        id\n      });\n      mutate();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full max-w-3xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl\",\n        children: \"Next Fauna GraphQL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/new\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"w-auto hover:underline hover:text-blue-700\",\n          children: \"Create new todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.allTodos.data.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => toggleTodo(todo._id, todo.completed),\n            className: `w-1/2 cursor-pointer hover:text-blue-700 ${todo.completed ? 'line-through' : 'no-underline'}`,\n            children: todo.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/todo/[id]\",\n            as: `/todo/${todo._id}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"w-1/4\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => deleteATodo(todo._id),\n            className: \"w-1/4\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/index.tsx"],"names":["useSWR","Link","gql","Layout","graphQLClient","Home","token","fetcher","query","request","data","error","mutate","toggleTodo","id","completed","variables","setHeader","console","deleteATodo","allTodos","map","todo","_id","task"],"mappings":"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","sourcesContent":["import useSWR from 'swr'\nimport Link from 'next/link'\nimport { gql } from 'graphql-request'\nimport Layout from '../components/layout'\nimport { graphQLClient } from '../utils/graphql-client'\n\n\nconst Home = ({token}: { token: any }) => {\n\tconst fetcher = async (query) => await graphQLClient(token).request(query)\n\tconst { data, error, mutate } = useSWR(\n\t\tgql`\n      {\n        allTodos {\n          data {\n            _id\n            task\n            completed\n          }\n        }    \n      }\n    `, fetcher\n\t)\n\n\tif (error) return <div>Error...</div>\n\n\tconst toggleTodo = async (id, completed) => {\n\t\tconst query = gql`\n      mutation PartialUpdateTodo($id: ID!, $completed: Boolean!) {\n        partialUpdateTodo(id: $id, data: { completed: $completed }) {\n          _id\n          completed\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid,\n\t\t\tcompleted: !completed,\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(query, variables)\n\t\t\tmutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\tconst deleteATodo = async (id) => {\n\t\tconst query = gql`\n      mutation DeleteATodo($id: ID!) {\n        deleteTodo(id: $id) {\n          _id\n        }\n      }\n    `\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, { id })\n\t\t\tmutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"flex flex-col w-full max-w-3xl\">\n\t\t\t\t<h1 className=\"text-3xl\">Next Fauna GraphQL</h1>\n\t\t\t\t<Link href=\"/new\">\n\t\t\t\t\t<a className=\"w-auto hover:underline hover:text-blue-700\">Create new todo</a>\n\t\t\t\t</Link>\n     \n\t\t\t\t{data ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{data.allTodos.data.map((todo) => (\n\t\t\t\t\t\t\t<div key={todo._id} className=\"flex justify-between w-full\">\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tonClick={() => toggleTodo(todo._id, todo.completed)}\n\t\t\t\t\t\t\t\t\tclassName={`w-1/2 cursor-pointer hover:text-blue-700 ${todo.completed ? 'line-through' : 'no-underline'}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{todo.task}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Link href=\"/todo/[id]\" as={`/todo/${todo._id}`}>\n\t\t\t\t\t\t\t\t\t<a className=\"w-1/4\">Edit</a>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t<span onClick={() => deleteATodo(todo._id)} className=\"w-1/4\">\n                Delete\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t): (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t)}\n\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}