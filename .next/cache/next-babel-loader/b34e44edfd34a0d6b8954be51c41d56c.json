{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/index.tsx\";\nimport { gql } from 'graphql-request';\nimport Layout from '../components/layout';\nimport { graphQLClient } from '../utils/graphql-client';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport useSWR from 'swr';\nimport { useEffect, useState } from 'react';\n\nconst Home = ({\n  token,\n  upcomingGames\n}) => {\n  const {\n    0: leagues,\n    1: setLeagues\n  } = useState();\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n\n  const fetcher = async query => await graphQLClient(token).request(query);\n\n  const query = gql`\n\tquery MyQuery {\n\tallLeagues {\n\t\tdata {\n\t\t\tname\n\t\t\tmembers {\n\t\t\t\tdata {\n\t\t\t\t\tusername\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t`;\n  const {\n    data,\n    error\n  } = useSWR(query, fetcher);\n  useEffect(() => {\n    setLeagues(() => data);\n  }, [data]);\n\n  if (error) {\n    console.error(error);\n    setErrorMessage(() => error);\n  }\n\n  if (errorMessage) return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full mx-auto\",\n      children: [leagues && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(leagues)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), upcomingGames ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full sm:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 font-light\",\n          children: \"Next 5 PL Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), upcomingGames.events.slice(0, 5).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between w-full mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3\",\n            children: event.strHomeTeam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3\",\n            children: event.strAwayTeam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3 text-sm\",\n            children: event.dateEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, event.idEvent, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getServerSideProps(ctx) {\n  const token = getAuthCookie(ctx.req);\n  const upcomingGames = await fetch('https://www.thesportsdb.com/api/v1/json/1/eventsnextleague.php?id=4328').then(res => res.json());\n  return {\n    props: {\n      token: token || null,\n      upcomingGames\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/index.tsx"],"names":["gql","Layout","graphQLClient","getAuthCookie","useSWR","useEffect","useState","Home","token","upcomingGames","leagues","setLeagues","errorMessage","setErrorMessage","fetcher","query","request","data","error","console","JSON","stringify","events","slice","map","event","strHomeTeam","strAwayTeam","dateEvent","idEvent","getServerSideProps","ctx","req","fetch","then","res","json","props"],"mappings":"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","sourcesContent":["import { gql } from 'graphql-request'\nimport Layout from '../components/layout'\nimport { graphQLClient } from '../utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport useSWR from 'swr'\nimport { useEffect, useState } from 'react'\n\nconst Home = ({token, upcomingGames}: { token: any, upcomingGames: any }) => {\n\tconst [leagues, setLeagues] = useState()\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst fetcher = async (query) => await graphQLClient(token).request(query)\n\n\tconst query = gql`\n\tquery MyQuery {\n\tallLeagues {\n\t\tdata {\n\t\t\tname\n\t\t\tmembers {\n\t\t\t\tdata {\n\t\t\t\t\tusername\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t`\n\tconst { data, error } = useSWR(query, fetcher)\n\tuseEffect(() => {\n\t\tsetLeagues(() => data)\n\t}, [data])\n\t\t\n\tif (error) {\n\t\tconsole.error(error)\n\t\tsetErrorMessage(() => error)\n\t}\n\n\n\tif (errorMessage) return (\n\t\t<Layout>\n\t\t\t<div>Error...</div>\n\t\t</Layout>\n\t)\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"flex flex-col items-center w-full mx-auto\">\n\t\t\t\t{leagues && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{JSON.stringify(leagues)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{upcomingGames ? (\n\t\t\t\t\t<div className=\"w-full sm:w-1/2\">\n\t\t\t\t\t\t<p className=\"mb-2 font-light\">Next 5 PL Games</p>\n\t\t\t\t\t\t{upcomingGames.events.slice(0, 5).map((event) => (\n\t\t\t\t\t\t\t<div key={event.idEvent} className=\"flex items-center justify-between w-full mb-1\">\n\t\t\t\t\t\t\t\t<div className=\"w-1/3\">\n\t\t\t\t\t\t\t\t\t{event.strHomeTeam}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w-1/3\">\n\t\t\t\t\t\t\t\t\t{event.strAwayTeam}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w-1/3 text-sm\">\n\t\t\t\t\t\t\t\t\t{event.dateEvent}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t): (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t)}\n\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = getAuthCookie(ctx.req)\n\tconst upcomingGames = await fetch('https://www.thesportsdb.com/api/v1/json/1/eventsnextleague.php?id=4328').then(res => res.json())\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tupcomingGames\n\t} }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}