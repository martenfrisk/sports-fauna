{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/leagues.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\t\\t{\\n\\t\\t\\t\\tallLeagues {\\n\\t\\t\\t\\t\\tdata {\\n\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\tname\\n\\t\\t\\t\\t\\t\\tmembers {\\n\\t\\t\\t\\t\\t\\t\\tdata {\\n\\t\\t\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t\\t\\t\\tusername\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t}\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphQLClient } from '@/utils/graphql-client';\nimport Link from 'next/link';\nimport { UserContext } from '@/utils/user-context';\nimport { gql } from 'graphql-request';\nimport { useContext, useState } from 'react';\n\nvar Leagues = function Leagues(_ref) {\n  _s();\n\n  var token = _ref.token,\n      leagueData = _ref.leagueData;\n\n  var _useContext = useContext(UserContext),\n      userID = _useContext.userID;\n\n  var _useState = useState(userID),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState(leagueData),\n      leagueInfo = _useState2[0],\n      setLeagueInfo = _useState2[1];\n\n  function getNewLeagueData() {\n    return _getNewLeagueData.apply(this, arguments);\n  }\n\n  function _getNewLeagueData() {\n    _getNewLeagueData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var query;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              query = gql(_templateObject3());\n              _context3.next = 3;\n              return graphQLClient(token).request(query).then(function (res) {\n                return setLeagueInfo(res);\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getNewLeagueData.apply(this, arguments);\n  }\n\n  var joinLeague = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userID, leagueID) {\n      var mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mutation = gql(_templateObject());\n              variables = {\n                userID: userID,\n                leagueID: leagueID\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables);\n\n            case 5:\n              getNewLeagueData(); // mutate()\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function joinLeague(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var leaveLeague = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userID, leagueID, leagueName) {\n      var mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              mutation = gql(_templateObject2());\n              variables = {\n                userID: userID,\n                leagueID: leagueID,\n                leagueName: leagueName\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables);\n\n            case 5:\n              getNewLeagueData(); // mutate()\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 8]]);\n    }));\n\n    return function leaveLeague(_x3, _x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return leagueInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Leagues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, _this), leagueInfo.data.map(function (league) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/league/[id]\",\n            as: \"/league/\".concat(league._id),\n            children: league.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, _this), league.members.data.some(function (member) {\n          return member._id === userData.id;\n        }) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return leaveLeague(userData.id, league._id, league.name);\n          },\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return joinLeague(userData.id, league._id);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }, _this), league.members.data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2\",\n          children: [\"-\", league.members.data.map(function (member) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: member.username\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 10\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, _this)]\n      }, league._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 4\n  }, _this);\n};\n\n_s(Leagues, \"4Blr+HZOdDAVCnKK9c3lXjoLaiY=\");\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/leagues.tsx"],"names":["graphQLClient","Link","UserContext","gql","useContext","useState","Leagues","token","leagueData","userID","userData","setUserData","leagueInfo","setLeagueInfo","getNewLeagueData","query","request","then","res","joinLeague","leagueID","mutation","variables","setHeader","console","error","leaveLeague","leagueName","data","map","league","_id","name","members","some","member","id","length","username"],"mappings":"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","sourcesContent":["import { graphQLClient } from '@/utils/graphql-client'\nimport Link from 'next/link'\nimport { UserContext } from '@/utils/user-context'\nimport { gql } from 'graphql-request'\nimport { useContext, useEffect, useState } from 'react'\nimport useSWR from 'swr'\n\nconst Leagues = ({ token, leagueData }: { token: any, leagueData: any }) => {\n\tconst { userID } = useContext(UserContext)\n\tconst [userData, setUserData] = useState(userID)\n\tconst [leagueInfo, setLeagueInfo] = useState(leagueData)\n\t\n\tasync function getNewLeagueData() {\n\t\tconst query = gql`\n\t\t\t{\n\t\t\t\tallLeagues {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tname\n\t\t\t\t\t\tmembers {\n\t\t\t\t\t\t\tdata {\n\t\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}`\n\t\t\n\t\tawait graphQLClient(token).request(query).then((res) => setLeagueInfo(res))\n\t}\n\t\n\n\tconst joinLeague = async (userID, leagueID) => {\n\t\tconst mutation = gql`\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\tgetNewLeagueData()\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\tconst leaveLeague = async (userID, leagueID, leagueName) => {\n\t\tconst mutation = gql`\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID,\n\t\t\tleagueName\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\tgetNewLeagueData()\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\treturn (\n\t\tleagueInfo && (\n\t\t\t<div>\n\t\t\t\t<p>Leagues</p>\n\t\t\t\t{leagueInfo.data.map((league) => (\n\t\t\t\t\t<div className=\"flex\" key={league._id}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link href=\"/league/[id]\" as={`/league/${league._id}`}>\n\t\t\t\t\t\t\t\t{league.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{league.members.data.some((member) => member._id === userData.id) ? (\n\t\t\t\t\t\t\t<button onClick={() => leaveLeague(userData.id, league._id, league.name)}>Leave</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<button onClick={() => joinLeague(userData.id, league._id)}>Join</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{league.members.data.length > 0 && (\n\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t{league.members.data.map((member) => (\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2\" key={member._id}>\n\t\t\t\t\t\t\t\t\t\t{member.username}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t)\n}\n\nexport default Leagues"]},"metadata":{},"sourceType":"module"}