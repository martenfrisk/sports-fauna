{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\";\nimport Layout from '@/components/layout';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport { graphQLClient } from '@/utils/graphql-client';\nimport { gql } from 'graphql-request';\nimport useSWR from 'swr';\n\nconst Profile = ({\n  token\n}) => {\n  const {\n    data: user\n  } = useSWR('/api/user');\n\n  const fetcher = async query => await graphQLClient(token).request(query, user.id);\n\n  const query = gql`\n\t\tquery FindCurrentUser($id: ID!) {\n\t\t\t\tfindUserById(id: $id) {\n\t\t\t\t\temail\n\t\t\t\t\ttodos {\n\t\t\t\t\t\tdata {\n\t\t\t\t\t\t\ttask\n\t\t\t\t\t\t\tcompleted\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t}\n\t`;\n  const {\n    data,\n    error\n  } = useSWR([query, user && user.id], fetcher);\n  console.log(data);\n  if (error) return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: JSON.stringify(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getServerSideProps = ctx => {\n  const token = getAuthCookie(ctx.req);\n  return {\n    props: {\n      token: token || null\n    }\n  };\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["Layout","getAuthCookie","graphQLClient","gql","useSWR","Profile","token","data","user","fetcher","query","request","id","error","console","log","JSON","stringify","getServerSideProps","ctx","req","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAC5C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBJ,MAAM,CAAC,WAAD,CAA7B;;AACA,QAAMK,OAAO,GAAG,MAAOC,KAAP,IAAiB,MAAMR,aAAa,CAACI,KAAD,CAAb,CAAqBK,OAArB,CAA6BD,KAA7B,EAAoCF,IAAI,CAACI,EAAzC,CAAvC;;AAGA,QAAMF,KAAK,GAAGP,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZC;AAaA,QAAM;AAAEI,IAAAA,IAAF;AAAQM,IAAAA;AAAR,MAAkBT,MAAM,CAAC,CAACM,KAAD,EAAQF,IAAI,IAAIA,IAAI,CAACI,EAArB,CAAD,EAA2BH,OAA3B,CAA9B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,MAAIM,KAAJ,EAAW,oBACV,QAAC,MAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADU;AAKX,sBACC,QAAC,MAAD;AAAA,cACEG,IAAI,CAACC,SAAL,CAAeV,IAAf;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA/BD;;AAiCA,OAAO,MAAMW,kBAAkB,GAAIC,GAAD,IAAc;AAC/C,QAAMb,KAAK,GAAGL,aAAa,CAACkB,GAAG,CAACC,GAAL,CAA3B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAEA,KAAK,IAAI;AAAlB;AAAT,GAAP;AACA,CAHM;AAKP,eAAeD,OAAf","sourcesContent":["import Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\n\nconst Profile = ({ token }: {token: any}) => {\n\tconst { data: user } = useSWR('/api/user')\n\tconst fetcher = async (query) => await graphQLClient(token).request(query, user.id )\n\t\n\t\n\tconst query = gql`\n\t\tquery FindCurrentUser($id: ID!) {\n\t\t\t\tfindUserById(id: $id) {\n\t\t\t\t\temail\n\t\t\t\t\ttodos {\n\t\t\t\t\t\tdata {\n\t\t\t\t\t\t\ttask\n\t\t\t\t\t\t\tcompleted\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t}\n\t`\n\tconst { data, error } = useSWR([query, user && user.id], fetcher)\n\tconsole.log(data)\n\n\tif (error) return (\n\t\t<Layout>\n\t\t\t<div>Error...</div>\n\t\t</Layout>\n\t)\n\treturn (\n\t\t<Layout>\n\t\t\t{JSON.stringify(data)}\n\t\t</Layout>\n\t)\n}\n\nexport const getServerSideProps = (ctx: any) => {\n\tconst token = getAuthCookie(ctx.req)\n\treturn { props: { token: token || null } }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}