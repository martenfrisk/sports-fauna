{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/signup.tsx\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useForm } from 'react-hook-form';\nimport Layout from '@/components/layout';\n\nconst Signup = () => {\n  const router = useRouter();\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n  const {\n    handleSubmit,\n    register,\n    watch,\n    errors\n  } = useForm();\n  const onSubmit = handleSubmit(async formData => {\n    if (errorMessage) setErrorMessage('');\n\n    try {\n      const res = await fetch('/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (res.ok) {\n        router.push('/');\n      } else {\n        throw new Error(await res.text());\n      }\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.message);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email@example.com\",\n          ref: register({\n            required: 'Email is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"text-red-700\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Favorite team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"favTeam\",\n          placeholder: \"DIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Your password\",\n          ref: register({\n            required: 'Password is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"text-red-700\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Confirm password\",\n          ref: register({\n            validate: value => value === watch('password') || 'Password does not match'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), errors.password2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          className: \"text-red-700\",\n          children: errors.password2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      className: \"text-red-700\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/signup.tsx"],"names":["useState","useRouter","useForm","Layout","Signup","router","errorMessage","setErrorMessage","handleSubmit","register","watch","errors","onSubmit","formData","res","fetch","method","headers","body","JSON","stringify","ok","push","Error","text","error","console","message","required","email","password","validate","value","password2"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useForm } from 'react-hook-form'\nimport Layout from '@/components/layout'\n\nconst Signup = () => {\n\tconst router = useRouter()\n\n\tconst [errorMessage, setErrorMessage] = useState('')\n\n\tconst { handleSubmit, register, watch, errors } = useForm()\n\n\tconst onSubmit = handleSubmit(async (formData) => {\n\t\tif (errorMessage) setErrorMessage('')\n\n\t\ttry {\n\t\t\tconst res = await fetch('/api/signup', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(formData)\n\t\t\t})\n\n\t\t\tif (res.ok) {\n\t\t\t\trouter.push('/')\n\t\t\t} else {\n\t\t\t\tthrow new Error(await res.text())\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t})\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>Sign up</h1>\n\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tplaceholder=\"email@example.com\"\n\t\t\t\t\t\tref={register({ required: 'Email is required' })}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t<span role=\"alert\" className=\"text-red-700\">\n\t\t\t\t\t\t\t{errors.email.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Favorite team</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"favTeam\"\n\t\t\t\t\t\tplaceholder=\"DIF\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t\t\tref={register({ required: 'Password is required' })}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password && (\n\t\t\t\t\t\t<span role=\"alert\" className=\"text-red-700\">\n\t\t\t\t\t\t\t{errors.password.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<label>Confirm password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Confirm password\"\n\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\tvalidate: (value) => \n\t\t\t\t\t\t\t\tvalue === watch('password') || 'Password does not match',\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.password2 && (\n\t\t\t\t\t\t<span role=\"alert\" className=\"text-red-700\">\n\t\t\t\t\t\t\t{errors.password2.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"submit\">Sign up</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t{errorMessage && (\n\t\t\t\t<p role=\"alert\" className=\"text-red-700\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}