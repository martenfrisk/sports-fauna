{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/leagues.tsx\";\nimport { graphQLClient } from '@/utils/graphql-client';\nimport Link from 'next/link';\nimport { UserContext } from '@/utils/user-context';\nimport { gql } from 'graphql-request';\nimport { useContext, useState } from 'react';\n\nconst Leagues = ({\n  token,\n  leagueData\n}) => {\n  const {\n    userID\n  } = useContext(UserContext);\n  const {\n    0: userData,\n    1: setUserData\n  } = useState(userID); // const fetcher = (url) => fetch(url).then((r) => r.json())\n  // const { data: user } = useSWR('/api/user')\n  // useEffect(() => {\n  // \tsetUserID(user)\n  // }, [user])\n  // const { mutate } = useSWR(\n  // \tgql`\n  //     {\n  //       allLeagues {\n  //         data {\n  //           name\n  //         }\n  //       }\n  //     }\n  //   `,\n  // \tfetcher\n  // )\n\n  const joinLeague = async (userID, leagueID) => {\n    const mutation = gql`\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\n          name\n        }\n      }\n    `;\n    const variables = {\n      userID,\n      leagueID\n    };\n\n    try {\n      await graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables); // mutate()\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const leaveLeague = async (userID, leagueID, leagueName) => {\n    const mutation = gql`\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\n          name\n        }\n      }\n    `;\n    const variables = {\n      userID,\n      leagueID,\n      leagueName\n    };\n\n    try {\n      await graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables); // mutate()\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return leagueData && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Leagues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), leagueData.data.map(league => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/league/[id]\",\n          as: `/league/${league._id}`,\n          children: league.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), league.members.data.some(member => member._id === userData.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => leaveLeague(userData.id, league._id, league.name),\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => joinLeague(userData.id, league._id),\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 8\n      }, this), league.members.data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-2\",\n        children: [\"-\", league.members.data.map(member => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: member.username\n        }, member._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 10\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 8\n      }, this)]\n    }, league._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 4\n  }, this);\n};\n\nexport default Leagues;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/leagues.tsx"],"names":["graphQLClient","Link","UserContext","gql","useContext","useState","Leagues","token","leagueData","userID","userData","setUserData","joinLeague","leagueID","mutation","variables","setHeader","request","error","console","leaveLeague","leagueName","data","map","league","_id","name","members","some","member","id","length","username"],"mappings":"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","sourcesContent":["import { graphQLClient } from '@/utils/graphql-client'\nimport Link from 'next/link'\nimport { UserContext } from '@/utils/user-context'\nimport { gql } from 'graphql-request'\nimport { useContext, useEffect, useState } from 'react'\nimport useSWR from 'swr'\n\nconst Leagues = ({ token, leagueData }: { token: any, leagueData: any }) => {\n\tconst { userID } = useContext(UserContext)\n\tconst [userData, setUserData] = useState(userID)\n\t// const fetcher = (url) => fetch(url).then((r) => r.json())\n\t// const { data: user } = useSWR('/api/user')\n\t// useEffect(() => {\n\t// \tsetUserID(user)\n\t// }, [user])\n\t// const { mutate } = useSWR(\n\t// \tgql`\n\t//     {\n\t//       allLeagues {\n\t//         data {\n\t//           name\n\t//         }\n\t//       }\n\t//     }\n\t//   `,\n\t// \tfetcher\n\t// )\n\n\n\tconst joinLeague = async (userID, leagueID) => {\n\t\tconst mutation = gql`\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\tconst leaveLeague = async (userID, leagueID, leagueName) => {\n\t\tconst mutation = gql`\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID,\n\t\t\tleagueName\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\treturn (\n\t\tleagueData && (\n\t\t\t<div>\n\t\t\t\t<p>Leagues</p>\n\t\t\t\t{leagueData.data.map((league) => (\n\t\t\t\t\t<div className=\"flex\" key={league._id}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link href=\"/league/[id]\" as={`/league/${league._id}`}>\n\t\t\t\t\t\t\t\t{league.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{league.members.data.some((member) => member._id === userData.id) ? (\n\t\t\t\t\t\t\t<button onClick={() => leaveLeague(userData.id, league._id, league.name)}>Leave</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<button onClick={() => joinLeague(userData.id, league._id)}>Join</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{league.members.data.length > 0 && (\n\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t{league.members.data.map((member) => (\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2\" key={member._id}>\n\t\t\t\t\t\t\t\t\t\t{member.username}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t)\n}\n\nexport default Leagues"]},"metadata":{},"sourceType":"module"}