{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery MyQuery($id: ID!)\\n\\t\\t\\t{\\n\\t\\t\\t\\tfindUserByID(id: $id) {\\n\\t\\t\\t\\t\\temail\\n\\t\\t\\t\\t\\ttodos {\\n\\t\\t\\t\\t\\t\\tdata {\\n\\t\\t\\t\\t\\t\\t\\ttask\\n\\t\\t\\t\\t\\t\\t\\tcompleted\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}    \\n\\t\\t\\t}\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'graphql-request';\nimport useSWR from 'swr';\nimport Layout from '@/components/layout';\n\nvar Profile = function Profile(_ref) {\n  _s();\n\n  var token = _ref.token;\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      user = _useSWR.data,\n      mutateUser = _useSWR.mutate; // console.log(data)\n  // const [userTodos, setUserTodos] = useState()\n\n\n  var query = gql(_templateObject());\n  var variables = {\n    id: user && user.id\n  }; // const fetcher = async () => await graphQLClient(token)\n  // \t.request(query, variables)\n\n  var info;\n  console.log({\n    info: info\n  }); // const { data, error } = useSWR([query, variables], fetcher)\n  // useEffect(() => {\n  // \tfetcher()\n  // }, [data])\n  // if (error) return (\n  // \t<Layout>\n  // \t\t<div>Error...</div>\n  // \t</Layout>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(user)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Profile, \"EWAoKXcPBPLHkveIqaRLvyLGM1s=\", false, function () {\n  return [useSWR];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["gql","useSWR","Layout","Profile","token","fetcher","url","fetch","then","r","json","user","data","mutateUser","mutate","query","variables","id","info","console","log","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;AACA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6B;AAAA;;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;;AAC5C,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,WAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,KAAhB,CAAT;AAAA,GAAhB;;AAD4C,gBAGDT,MAAM,CAAC,WAAD,EAAcI,OAAd,CAHL;AAAA,MAG9BM,IAH8B,WAGpCC,IAHoC;AAAA,MAGhBC,UAHgB,WAGxBC,MAHwB,EAK5C;AACA;;;AACA,MAAMC,KAAK,GAAGf,GAAH,mBAAX;AAeA,MAAMgB,SAAS,GAAG;AACjBC,IAAAA,EAAE,EAAEN,IAAI,IAAIA,IAAI,CAACM;AADA,GAAlB,CAtB4C,CA0B5C;AACA;;AACA,MAAIC,IAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA,IAAI,EAAJA;AAAD,GAAZ,EA7B4C,CA8B5C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,sBACC,QAAC,MAAD;AAAA,cACGP,IAAI,gBACL;AAAA,gBACEU,IAAI,CAACC,SAAL,CAAeX,IAAf;AADF;AAAA;AAAA;AAAA;AAAA,aADK,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,WADD;AAWA,CAnDD;;GAAMR,O;UAGsCF,M;;;KAHtCE,O;;AA8DN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\nimport Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport user from './api/user'\n\nconst Profile = ({ token }: {token: any}) => {\n\tconst fetcher = (url) => fetch(url).then((r) => r.json())\n\n\tconst { data: user, mutate: mutateUser } = useSWR('/api/user', fetcher)\n\n\t// console.log(data)\n\t// const [userTodos, setUserTodos] = useState()\n\tconst query = gql`\n\t\tquery MyQuery($id: ID!)\n\t\t\t{\n\t\t\t\tfindUserByID(id: $id) {\n\t\t\t\t\temail\n\t\t\t\t\ttodos {\n\t\t\t\t\t\tdata {\n\t\t\t\t\t\t\ttask\n\t\t\t\t\t\t\tcompleted\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}    \n\t\t\t}\n\t`\n\n\tconst variables = {\n\t\tid: user && user.id\n\t}\n\n\t// const fetcher = async () => await graphQLClient(token)\n\t// \t.request(query, variables)\n\tlet info\n\tconsole.log({info})\n\t// const { data, error } = useSWR([query, variables], fetcher)\n\t// useEffect(() => {\n\t// \tfetcher()\n\t// }, [data])\n\n\t// if (error) return (\n\t// \t<Layout>\n\t// \t\t<div>Error...</div>\n\t// \t</Layout>\n\t// )\n\treturn (\n\t\t<Layout>\n\t\t\t{ user ? (\n\t\t\t\t<div>\n\t\t\t\t\t{JSON.stringify(user)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = await getAuthCookie(ctx.req)\n\treturn { \n\t\tprops: { \n\t\t\ttoken: token || null,\n\t\t}\n\t}\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}