{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/index.js\";\nimport useSWR from 'swr';\nimport Link from 'next/link';\nimport { gql } from 'graphql-request';\nimport Layout from '../components/layout';\nimport styles from '../styles/Home.module.css';\nimport { graphQLClient } from '../utils/graphql-client';\n\nconst fetcher = async query => await graphQLClient.request(query);\n\nexport default function Home() {\n  const {\n    data,\n    error\n  } = useSWR(gql`\n      {\n        allTodos {\n          data {\n            _id\n            task\n            completed\n          }\n        }    \n      }\n    `, fetcher);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Next Fauna GraphQL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/new\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Create new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.allTodos.data.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.todo,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/index.js"],"names":["useSWR","Link","gql","Layout","styles","graphQLClient","fetcher","query","request","Home","data","error","allTodos","map","todo","task","_id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;AAEA,MAAMC,OAAO,GAAG,MAAOC,KAAP,IAAiB,MAAMF,aAAa,CAACG,OAAd,CAAsBD,KAAtB,CAAvC;;AAEA,eAAe,SAASE,IAAT,GAAgB;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBX,MAAM,CAC5BE,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXgC,EAWzBI,OAXyB,CAA9B;AAcA,MAAIK,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGD,IAAI,gBACH;AAAA,gBACGA,IAAI,CAACE,QAAL,CAAcF,IAAd,CAAmBG,GAAnB,CAAwBC,IAAD,iBACtB;AAAmB,QAAA,SAAS,EAAEV,MAAM,CAACU,IAArC;AAAA,+BACE;AAAA,oBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,SAASD,IAAI,CAACE,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADG,gBASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import useSWR from 'swr'\nimport Link from 'next/link'\nimport { gql } from 'graphql-request'\nimport Layout from '../components/layout'\nimport styles from '../styles/Home.module.css'\nimport { graphQLClient } from '../utils/graphql-client'\n\nconst fetcher = async (query) => await graphQLClient.request(query)\n\nexport default function Home() {\n  const { data, error } = useSWR(\n    gql`\n      {\n        allTodos {\n          data {\n            _id\n            task\n            completed\n          }\n        }    \n      }\n    `, fetcher\n  )\n\n  if (error) return <div>Error...</div>\n\n  return (\n    <Layout>\n      <h1>Next Fauna GraphQL</h1>\n      <Link href=\"/new\">\n        <a>Create new todo</a>\n      </Link>\n      {data ? (\n        <ul>\n          {data.allTodos.data.map((todo) => (\n            <li key={todo._id} className={styles.todo}>\n              <span>{todo.task}</span>\n            </li>\n          ))}\n        </ul>\n      ): (\n        <div>Loading...</div>\n      )}\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}