{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/new.tsx\";\nimport { useState } from 'react';\nimport Router from 'next/router';\nimport { gql } from 'graphql-request';\nimport { useForm } from 'react-hook-form';\nimport Layout from '../components/layout';\nimport { graphQLClient } from '../utils/graphql-client';\n\nconst New = () => {\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  const onSubmit = handleSubmit(async ({\n    task\n  }) => {\n    if (errorMessage) setErrorMessage('');\n    const query = gql`\n      mutation CreateATodo($task: String!) {\n        createTodo(data: { task: $task, completed: false }) {\n          task\n          completed\n        }\n      }\n    `;\n\n    try {\n      await graphQLClient.request(query, {\n        task\n      });\n      Router.push('/');\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.message);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl\",\n      children: \"Create new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"test\",\n          name: \"task\",\n          placeholder: \"e.g. do something\",\n          ref: register({\n            required: 'Task is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), errors.task && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          children: errors.task.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\nexport default New;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/new.tsx"],"names":["useState","Router","gql","useForm","Layout","graphQLClient","New","errorMessage","setErrorMessage","handleSubmit","register","errors","onSubmit","task","query","request","push","error","console","message","required"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAES,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCR,OAAO,EAAlD;AAEA,QAAMS,QAAQ,GAAGH,YAAY,CAAC,OAAO;AAAEI,IAAAA;AAAF,GAAP,KAAoB;AACjD,QAAIN,YAAJ,EAAkBC,eAAe,CAAC,EAAD,CAAf;AAElB,UAAMM,KAAK,GAAGZ,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAPE;;AASA,QAAI;AACH,YAAMG,aAAa,CAACU,OAAd,CAAsBD,KAAtB,EAA6B;AAAED,QAAAA;AAAF,OAA7B,CAAN;AACAZ,MAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAT,MAAAA,eAAe,CAACS,KAAK,CAACE,OAAP,CAAf;AACA;AACD,GAnB4B,CAA7B;AAqBA,sBACC,QAAC,MAAD;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAM,MAAA,QAAQ,EAAEP,QAAhB;AAAA,8BACC;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,IAAI,EAAC,MAFN;AAGC,UAAA,WAAW,EAAC,mBAHb;AAIC,UAAA,GAAG,EAAEF,QAAQ,CAAC;AAAEU,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFD,EAQET,MAAM,CAACE,IAAP,iBACA;AAAM,UAAA,IAAI,EAAC,OAAX;AAAA,oBACEF,MAAM,CAACE,IAAP,CAAYM;AADd;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAgBC;AAAA,+BACC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAwBEZ,YAAY,iBACZ;AAAG,MAAA,IAAI,EAAC,OAAR;AAAA,gBACEA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CAzDD;;AA2DA,eAAeD,GAAf","sourcesContent":["import { useState } from 'react'\nimport Router from 'next/router'\nimport { gql } from 'graphql-request'\nimport { useForm } from 'react-hook-form'\nimport Layout from '../components/layout'\nimport { graphQLClient } from '../utils/graphql-client'\n\nconst New = () => {\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst { handleSubmit, register, errors } = useForm()\n\n\tconst onSubmit = handleSubmit(async ({ task }) => {\n\t\tif (errorMessage) setErrorMessage('')\n\n\t\tconst query = gql`\n      mutation CreateATodo($task: String!) {\n        createTodo(data: { task: $task, completed: false }) {\n          task\n          completed\n        }\n      }\n    `\n\n\t\ttry {\n\t\t\tawait graphQLClient.request(query, { task })\n\t\t\tRouter.push('/')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t})\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1 className=\"text-3xl\">Create new todo</h1>\n\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>Task</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"test\"\n\t\t\t\t\t\tname=\"task\"\n\t\t\t\t\t\tplaceholder=\"e.g. do something\"\n\t\t\t\t\t\tref={register({ required: 'Task is required' })}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.task && (\n\t\t\t\t\t\t<span role=\"alert\">\n\t\t\t\t\t\t\t{errors.task.message}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"submit\">Create</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t{errorMessage && (\n\t\t\t\t<p role=\"alert\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}