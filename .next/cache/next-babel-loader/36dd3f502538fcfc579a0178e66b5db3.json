{"ast":null,"code":"import { query as q } from 'faunadb';\nimport { guestClient } from '@/utils/fauna-client';\nimport { setAuthCookie } from '@/utils/auth-cookies';\nexport default async function login(req, res) {\n  const {\n    email,\n    password\n  } = req.body;\n\n  if (!email || !password) {\n    return res.status(400).send('Email and password not provided');\n  }\n\n  try {\n    const auth = await guestClient.query(q.Login(q.Match(q.Index('user_by_email'), q.Casefold(email)), {\n      password\n    }));\n\n    if (!auth.secret) {\n      return res.status(404).send('Auth secret is missing');\n    }\n\n    setAuthCookie(res, auth.secret);\n    res.status(200).end();\n  } catch (error) {\n    console.error(error);\n    res.status(error.requestResult.statusCode).send(error.message);\n  }\n}","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/api/login.js"],"names":["query","q","guestClient","setAuthCookie","login","req","res","email","password","body","status","send","auth","Login","Match","Index","Casefold","secret","end","error","console","requestResult","statusCode","message"],"mappings":"AAAA,SAASA,KAAK,IAAIC,CAAlB,QAA2B,SAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,eAAe,eAAeC,KAAf,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC7C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,GAAG,CAACI,IAAhC;;AAEA,MAAI,CAACF,KAAD,IAAU,CAACC,QAAf,EAAyB;AACxB,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB,CAAP;AACA;;AAED,MAAI;AACH,UAAMC,IAAI,GAAG,MAAMV,WAAW,CAACF,KAAZ,CAClBC,CAAC,CAACY,KAAF,CAAQZ,CAAC,CAACa,KAAF,CAAQb,CAAC,CAACc,KAAF,CAAQ,eAAR,CAAR,EAAkCd,CAAC,CAACe,QAAF,CAAWT,KAAX,CAAlC,CAAR,EAA8D;AAC7DC,MAAAA;AAD6D,KAA9D,CADkB,CAAnB;;AAMA,QAAI,CAACI,IAAI,CAACK,MAAV,EAAkB;AACjB,aAAOX,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACA;;AAEDR,IAAAA,aAAa,CAACG,GAAD,EAAMM,IAAI,CAACK,MAAX,CAAb;AAEAX,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB;AACA,GAdD,CAcE,OAAOC,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAb,IAAAA,GAAG,CAACI,MAAJ,CAAWS,KAAK,CAACE,aAAN,CAAoBC,UAA/B,EAA2CX,IAA3C,CAAgDQ,KAAK,CAACI,OAAtD;AACA;AACD","sourcesContent":["import { query as q } from 'faunadb'\nimport { guestClient } from '@/utils/fauna-client'\nimport { setAuthCookie } from '@/utils/auth-cookies'\n\nexport default async function login(req, res) {\n\tconst { email, password } = req.body\n\n\tif (!email || !password) {\n\t\treturn res.status(400).send('Email and password not provided')\n\t}\n\n\ttry {\n\t\tconst auth = await guestClient.query(\n\t\t\tq.Login(q.Match(q.Index('user_by_email'), q.Casefold(email)), {\n\t\t\t\tpassword,\n\t\t\t})\n\t\t)\n\n\t\tif (!auth.secret) {\n\t\t\treturn res.status(404).send('Auth secret is missing')\n\t\t}\n\n\t\tsetAuthCookie(res, auth.secret)\n\n\t\tres.status(200).end()\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\tres.status(error.requestResult.statusCode).send(error.message)\n\t}\n}"]},"metadata":{},"sourceType":"module"}