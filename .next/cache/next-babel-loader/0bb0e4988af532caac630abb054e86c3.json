{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\";\nimport Layout from '@/components/layout';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport useSWR from 'swr';\n\nconst Profile = ({\n  token\n}) => {\n  const {\n    data: user\n  } = useSWR('/api/user'); // const { id } = data\n  // const fetcher = async (query) => await graphQLClient(token).request(query, data.id )\n  // const query = gql`\n  // \tquery FindCurrentUser($id: ID!) {\n  // \t\t\tfindUserById(id: $id) {\n  // \t\t\t\temail\n  // \t\t\t\ttodos {\n  // \t\t\t\t\tdata {\n  // \t\t\t\t\t\ttask\n  // \t\t\t\t\t\tcompleted\n  // \t\t\t\t\t}\n  // \t\t\t\t}\n  // \t\t\t}    \n  // \t\t}\n  // `\n  // // const { data, error } = useSWR([query, data.id], fetcher)\n  // if (error) return (\n  // \t<Layout>\n  // \t\t<div>Error...</div>\n  // \t</Layout>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: JSON.stringify(user)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getServerSideProps = ctx => {\n  const token = getAuthCookie(ctx.req);\n  return {\n    props: {\n      token: token || null\n    }\n  };\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["Layout","getAuthCookie","useSWR","Profile","token","data","user","JSON","stringify","getServerSideProps","ctx","req","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAC5C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBJ,MAAM,CAAC,WAAD,CAA7B,CAD4C,CAE5C;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,sBACC,QAAC,MAAD;AAAA,cACEK,IAAI,CAACC,SAAL,CAAeF,IAAf;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA/BD;;AAiCA,OAAO,MAAMG,kBAAkB,GAAIC,GAAD,IAAc;AAC/C,QAAMN,KAAK,GAAGH,aAAa,CAACS,GAAG,CAACC,GAAL,CAA3B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAAEA,KAAK,IAAI;AAAlB;AAAT,GAAP;AACA,CAHM;AAKP,eAAeD,OAAf","sourcesContent":["import Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\n\nconst Profile = ({ token }: {token: any}) => {\n\tconst { data: user } = useSWR('/api/user')\n\t// const { id } = data\n\t// const fetcher = async (query) => await graphQLClient(token).request(query, data.id )\n\t\n\t\n\t// const query = gql`\n\t// \tquery FindCurrentUser($id: ID!) {\n\t// \t\t\tfindUserById(id: $id) {\n\t// \t\t\t\temail\n\t// \t\t\t\ttodos {\n\t// \t\t\t\t\tdata {\n\t// \t\t\t\t\t\ttask\n\t// \t\t\t\t\t\tcompleted\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}\n\t// \t\t\t}    \n\t// \t\t}\n\t// `\n\t// // const { data, error } = useSWR([query, data.id], fetcher)\n\n\t// if (error) return (\n\t// \t<Layout>\n\t// \t\t<div>Error...</div>\n\t// \t</Layout>\n\t// )\n\treturn (\n\t\t<Layout>\n\t\t\t{JSON.stringify(user)}\n\t\t</Layout>\n\t)\n}\n\nexport const getServerSideProps = (ctx: any) => {\n\tconst token = getAuthCookie(ctx.req)\n\treturn { props: { token: token || null } }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}