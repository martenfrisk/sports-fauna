{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\",\n    _this = this;\n\nimport Layout from '@/components/layout';\n\nvar League = function League(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, _this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"League name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 6\n      }, _this), \"League members:\", data.members.data.length > 0 ? data.members.data.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(item)\n        }, item.username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 8\n        }, _this);\n      }) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm italics\",\n        children: \"No members :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = League;\nexport var __N_SSP = true;\nexport default League;\n\nvar _c;\n\n$RefreshReg$(_c, \"League\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["Layout","League","data","name","members","length","map","item","JSON","stringify","username"],"mappings":";;;;;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA6B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAE3C,sBACC,QAAC,MAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAGEA,IAAI,gBACJ;AAAA,8BACC;AAAA,oCACeA,IAAI,CAACC,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,qBAKED,IAAI,CAACE,OAAL,CAAaF,IAAb,CAAkBG,MAAlB,GAA2B,CAA3B,GACAH,IAAI,CAACE,OAAL,CAAaF,IAAb,CAAkBI,GAAlB,CAAsB,UAACC,IAAD;AAAA,4BACrB;AAAA,oBACEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AADF,WAAUA,IAAI,CAACG,QAAf;AAAA;AAAA;AAAA;AAAA,iBADqB;AAAA,OAAtB,CADA,gBAOA;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF;AAAA;AAAA;AAAA;AAAA;AAAA,aADI,gBAoBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AA4BA,CA9BD;;KAAMT,M;;AA2DN,eAAeA,MAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\n\nconst League = ({ data }: { data: any }) => {\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\n\t\t\t{data ? (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t</h2>\n\t\t\t\t\tLeague members: \n\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t{JSON.stringify(item)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"text-sm italics\">\n\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\n\t\t\t\t</div>\n\t\t\t): (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\tdata: data?.findLeagueByID\n\t} }\n}\n\n\nexport default League"]},"metadata":{},"sourceType":"module"}