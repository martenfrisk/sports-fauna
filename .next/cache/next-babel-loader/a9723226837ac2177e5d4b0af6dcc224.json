{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\";\nimport { useState } from 'react';\nimport { gql } from 'graphql-request';\nimport useSWR from 'swr';\nimport Layout from '@/components/layout';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nconst Profile = ({\n  token\n}) => {\n  const {\n    data: user\n  } = useSWR('/api/user');\n  console.log(data);\n  const {\n    0: userTodos,\n    1: setUserTodos\n  } = useState([]);\n  const query = gql`\n\t\tquery FindCurrentUser($id: ID!) {\n\t\t\tfindUserByID(id: $id) {\n\t\t\t\temail\n\t\t\t\ttodos {\n\t\t\t\t\tdata {\n\t\t\t\t\t\ttask\n\t\t\t\t\t\tcompleted\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}    \n\t\t}\n\t`;\n\n  const fetcher = async query => await graphQLClient(token).request(query); // const { data, error } = useSWR([query, data.id], fetcher)\n  // console.log(data)\n  // if (error) return (\n  // \t<Layout>\n  // \t\t<div>Error...</div>\n  // \t</Layout>\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: JSON.stringify(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getServerSideProps(ctx) {\n  const token = await getAuthCookie(ctx.req);\n  return {\n    props: {\n      token: token || null\n    }\n  };\n}\nexport default Profile;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["useState","gql","useSWR","Layout","getAuthCookie","graphQLClient","Profile","token","data","user","console","log","userTodos","setUserTodos","query","fetcher","request","JSON","stringify","getServerSideProps","ctx","req","props"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAC5C,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBP,MAAM,CAAC,WAAD,CAA7B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM;AAAA,OAACI,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMc,KAAK,GAAGb,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZC;;AAcA,QAAMc,OAAO,GAAG,MAAOD,KAAP,IAAiB,MAAMT,aAAa,CAACE,KAAD,CAAb,CAAqBS,OAArB,CAA6BF,KAA7B,CAAvC,CAlB4C,CAoB5C;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA,sBACC,QAAC,MAAD;AAAA,cACEG,IAAI,CAACC,SAAL,CAAeV,IAAf;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAjCD;;AAmCA,OAAO,eAAeW,kBAAf,CAAkCC,GAAlC,EAA4C;AAClD,QAAMb,KAAK,GAAG,MAAMH,aAAa,CAACgB,GAAG,CAACC,GAAL,CAAjC;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAEA,KAAK,IAAI;AAAlB;AAAT,GAAP;AACA;AAED,eAAeD,OAAf","sourcesContent":["import { useState } from 'react'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\nimport Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\n\nconst Profile = ({ token }: {token: any}) => {\n\tconst { data: user } = useSWR('/api/user')\n\tconsole.log(data)\n\tconst [userTodos, setUserTodos] = useState([])\n\tconst query = gql`\n\t\tquery FindCurrentUser($id: ID!) {\n\t\t\tfindUserByID(id: $id) {\n\t\t\t\temail\n\t\t\t\ttodos {\n\t\t\t\t\tdata {\n\t\t\t\t\t\ttask\n\t\t\t\t\t\tcompleted\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}    \n\t\t}\n\t`\n\n\tconst fetcher = async (query) => await graphQLClient(token).request(query)\n\t\n\t// const { data, error } = useSWR([query, data.id], fetcher)\n\t// console.log(data)\n\n\t// if (error) return (\n\t// \t<Layout>\n\t// \t\t<div>Error...</div>\n\t// \t</Layout>\n\t// )\n\treturn (\n\t\t<Layout>\n\t\t\t{JSON.stringify(data)}\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = await getAuthCookie(ctx.req)\n\treturn { props: { token: token || null } }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}