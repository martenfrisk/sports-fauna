{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// import { useRouter } from 'next/router'\nimport Layout from '@/components/layout';\nimport TeamPicker from 'pages/teampicker';\nimport { useState } from 'react';\n\nvar League = function League(_ref) {\n  _s();\n\n  var data = _ref.data,\n      teams = _ref.teams;\n\n  var _useState = useState(data.options.teams),\n      pickedTeam = _useState[0],\n      setPickedTeam = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, _this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"League name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League members:\", data.members.data.length > 0 ? data.members.data.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.username, \" (\", item.email, \")\"]\n          }, item.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No members :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League options:\", data.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-4 text-sm\",\n            children: data.options[\"class\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: data.options[\"public\"] ? 'Public' : 'Private'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, _this), JSON.stringify(data.options)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No options set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, _this), teams !== pickedTeam && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Click to save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(TeamPicker, {\n      teams: teams,\n      picker: [pickedTeam, setPickedTeam]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(League, \"z0IypD/HrtQPFp4W5znLboyHv5c=\");\n\n_c = League;\nexport var __N_SSP = true;\nexport default League;\n\nvar _c;\n\n$RefreshReg$(_c, \"League\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["Layout","TeamPicker","useState","League","data","teams","options","pickedTeam","setPickedTeam","name","members","length","map","item","username","email","JSON","stringify"],"mappings":";;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgD;AAAA;;AAAA,MAA7CC,IAA6C,QAA7CA,IAA6C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;;AAAA,kBAC1BH,QAAQ,CAACE,IAAI,CAACE,OAAL,CAAaD,KAAd,CADkB;AAAA,MACvDE,UADuD;AAAA,MAC3CC,aAD2C;;AAE9D,sBACC,QAAC,MAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAGEJ,IAAI,gBACJ;AAAA,8BACC;AAAA,oCACeA,IAAI,CAACK,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAIC;AAAA,sCAEEL,IAAI,CAACM,OAAL,CAAaN,IAAb,CAAkBO,MAAlB,GAA2B,CAA3B,GACAP,IAAI,CAACM,OAAL,CAAaN,IAAb,CAAkBQ,GAAlB,CAAsB,UAACC,IAAD;AAAA,8BACrB;AAAA,uBACEA,IAAI,CAACC,QADP,QACmBD,IAAI,CAACE,KADxB;AAAA,aAAUF,IAAI,CAACC,QAAf;AAAA;AAAA;AAAA;AAAA,mBADqB;AAAA,SAAtB,CADA,gBAOA;AAAM,UAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD,eAkBC;AAAA,sCAEEV,IAAI,CAACE,OAAL,gBACA;AAAA,kCACC;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,sBACEF,IAAI,CAACE,OAAL;AADF;AAAA;AAAA;AAAA;AAAA,mBADD,eAIC;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBACEF,IAAI,CAACE,OAAL,aAAsB,QAAtB,GAAiC;AADnC;AAAA;AAAA;AAAA;AAAA,mBAJD,EAOEU,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACE,OAApB,CAPF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,gBAWA;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,aADI,gBAwCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3CF,EA6CED,KAAK,KAAKE,UAAV,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9CF,eAgDC,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,KAAnB;AAA0B,MAAA,MAAM,EAAE,CAACE,UAAD,EAAaC,aAAb;AAAlC;AAAA;AAAA;AAAA;AAAA,aAhDD;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAoDA,CAtDD;;GAAML,M;;KAAAA,M;;AA4FN,eAAeA,MAAf","sourcesContent":["// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport TeamPicker from 'pages/teampicker'\nimport { useState } from 'react'\n\nconst League = ({ data, teams }: { data: any, teams: any }) => {\n\tconst [pickedTeam, setPickedTeam] = useState(data.options.teams)\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\n\t\t\t{data ? (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague members: \n\t\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t\t{item.username} ({item.email})\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague options:\n\t\t\t\t\t\t{data.options ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className=\"mr-4 text-sm\">\n\t\t\t\t\t\t\t\t\t{data.options.class}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-sm\">\n\t\t\t\t\t\t\t\t\t{data.options.public ? 'Public' : 'Private'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{JSON.stringify(data.options)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo options set\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t): (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t\t{teams !== pickedTeam && (\n\t\t\t\t<button>Click to save changes</button>\n\t\t\t)}\n\t\t\t<TeamPicker teams={teams} picker={[pickedTeam, setPickedTeam]} />\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\n\tconst { teams } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then((res) => res.json())\n\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\toptions {\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\tdata: data?.findLeagueByID,\n\t\tteams\n\t} }\n}\n\nexport default League"]},"metadata":{},"sourceType":"module"}