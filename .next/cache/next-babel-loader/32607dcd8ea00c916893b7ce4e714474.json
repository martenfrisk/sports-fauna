{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean, $class: LeagueType) {\\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public, class: $class }) {\\n          teams\\n\\t\\t\\t\\t\\tpublic\\n\\t\\t\\t\\t\\tclass\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\nimport TeamPicker from '@/components/teampicker';\nimport { useState } from 'react';\n\nvar League = function League(_ref) {\n  _s();\n\n  var data = _ref.data,\n      teams = _ref.teams,\n      token = _ref.token;\n\n  var _useState = useState(data.options ? data.options.teams : []),\n      pickedTeam = _useState[0],\n      setPickedTeam = _useState[1];\n\n  var _useState2 = useState(data.options ? data.options : {}),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState(null),\n      upcomingEvents = _useState3[0],\n      setUpcomingEvents = _useState3[1];\n\n  var getEvents = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(teamId) {\n      var _yield$fetch$then, events;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://www.thesportsdb.com/api/v1/json/1/eventsnext.php?id=\".concat(teamId)).then(function (res) {\n                return res.json();\n              });\n\n            case 2:\n              _yield$fetch$then = _context.sent;\n              events = _yield$fetch$then.events;\n              setUpcomingEvents(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  teamId: events\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getEvents(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState4 = useState(''),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState(''),\n      updateMessage = _useState5[0],\n      setUpdateMessage = _useState5[1];\n\n  var updateTeam = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var query, variables;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              query = gql(_templateObject());\n              variables = {\n                id: data.options._id,\n                teams: pickedTeam,\n                \"public\": options[\"public\"],\n                \"class\": options[\"class\"]\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return graphQLClient(token).request(query, variables);\n\n            case 5:\n              setTimeout(function () {\n                setUpdateMessage('');\n              }, 4000);\n              setUpdateMessage('Changes saved');\n              _context2.next = 13;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n              setErrorMessage(_context2.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    return function updateTeam() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2\",\n        children: pickedTeam.map(function (team) {\n          getEvents(team);\n          return JSON.stringify(upcomingEvents.team);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, _this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"League name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"League members:\", data.members.data.length > 0 ? data.members.data.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [item.username, \" (\", item.email, \")\"]\n            }, item.username, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 10\n            }, _this);\n          }) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-sm italics\",\n            children: \"No members :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"League options:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: options[\"class\"],\n            onChange: function onChange(e) {\n              return setOptions(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  \"class\": e.target.value\n                });\n              });\n            },\n            children: ['SINGLETEAM', 'SINGLEDIVISION', 'MULTITEAM', 'MULTIDIVISION', 'ANY'].map(function (item) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 95\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, _this), data.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-start justify-start text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"\".concat(options[\"public\"] && 'bg-blue-300', \" w-20 p-2 rounded-md\"),\n                onClick: function onClick() {\n                  return setOptions(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      \"public\": true\n                    });\n                  });\n                },\n                children: \"Public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"\".concat(!options[\"public\"] && 'bg-blue-300', \"  w-20 p-2 rounded-md\"),\n                onClick: function onClick() {\n                  return setOptions(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      \"public\": false\n                    });\n                  });\n                },\n                children: \"Private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 10\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 text-sm italics\",\n            children: \"No options set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return updateTeam();\n      },\n      children: \"Click to save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, _this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, _this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(TeamPicker, {\n      teams: teams,\n      picker: [pickedTeam, setPickedTeam]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(League, \"v4Pw8lwqVBBXtOyFb+DwKLqNDA4=\");\n\n_c = League;\nexport var __N_SSP = true;\nexport default League;\n\nvar _c;\n\n$RefreshReg$(_c, \"League\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["gql","Layout","graphQLClient","TeamPicker","useState","League","data","teams","token","options","pickedTeam","setPickedTeam","setOptions","upcomingEvents","setUpcomingEvents","getEvents","teamId","fetch","then","res","json","events","prev","errorMessage","setErrorMessage","updateMessage","setUpdateMessage","updateTeam","query","variables","id","_id","request","setTimeout","console","error","message","map","team","JSON","stringify","name","members","length","item","username","email","e","target","value"],"mappings":"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","sourcesContent":["// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport TeamPicker from '@/components/teampicker'\nimport { useState } from 'react'\n\nconst League = ({ data, teams, token }: { data: any, teams: any, token: any }) => {\n\tconst [pickedTeam, setPickedTeam] = useState(data.options ? data.options.teams : [])\n\tconst [options, setOptions] = useState(data.options ? data.options : {})\n\tconst [upcomingEvents, setUpcomingEvents] = useState(null)\n\n\tconst getEvents = async (teamId) => {\n\t\tconst { events } = await fetch(`https://www.thesportsdb.com/api/v1/json/1/eventsnext.php?id=${teamId}`).then((res) => res.json())\n\t\tsetUpcomingEvents((prev) => ({...prev, teamId: events}))\n\t}\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [updateMessage, setUpdateMessage] = useState('')\n\tconst updateTeam = async () => {\n\t\tconst query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean, $class: LeagueType) {\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public, class: $class }) {\n          teams\n\t\t\t\t\tpublic\n\t\t\t\t\tclass\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid: data.options._id,\n\t\t\tteams: pickedTeam,\n\t\t\tpublic: options.public,\n\t\t\tclass: options.class\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, variables)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetUpdateMessage('')\n\t\t\t}, 4000)\n\t\t\tsetUpdateMessage('Changes saved')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\t\t\t<div className=\"flex w-full\">\n\t\t\t\t<div className=\"w-1/2\">\n\t\t\t\t\t{pickedTeam.map((team) => {\n\t\t\t\t\t\tgetEvents(team)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tJSON.stringify(upcomingEvents.team)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{data ? (\n\t\t\t\t\t<div className=\"w-1/2\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague members: \n\t\t\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t\t\t{item.username} ({item.email})\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague options:\n\t\t\t\t\t\t\t<select value={options.class} onChange={(e) => setOptions((prev) => ({...prev, class: e.target.value}))}>\n\t\t\t\t\t\t\t\t{['SINGLETEAM',\t'SINGLEDIVISION', 'MULTITEAM', 'MULTIDIVISION', 'ANY'].map((item) => (<option key={item}>{item}</option>))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{data.options ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-col items-start justify-start text-sm\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${options.public && 'bg-blue-300'} w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions((prev) => ({...prev, public: true }))}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPublic\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${!options.public && 'bg-blue-300'}  w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions((prev) => ({...prev, public: false }))}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPrivate\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo options set\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t): (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button onClick={() => updateTeam()}>Click to save changes</button>\n\n\t\t\t{updateMessage && (\n\t\t\t\t<p>{updateMessage}</p>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<p>{errorMessage}</p>\n\t\t\t)}\n\t\t\t<TeamPicker teams={teams} picker={[pickedTeam, setPickedTeam]} />\n\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\n\tconst { teams } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then((res) => res.json())\n\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tdata: data?.findLeagueByID,\n\t\tteams\n\t} }\n}\n\nexport default League"]},"metadata":{},"sourceType":"module"}