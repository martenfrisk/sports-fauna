{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/todo/[id].js\";\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { gql } from 'graphql-request';\nimport Layout from '@/components/layout';\nimport EditForm from '@/components/edit-form';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nconst Todo = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  const fetcher = async query => await graphQLClient.request(query);\n\n  const query = gql`\n    query FindATodoByID($id: ID!) {\n      findTodoByID(id: $id) {\n        task\n        completed\n      }\n    }\n  `;\n  const {\n    data,\n    error\n  } = useSWR([query, id], fetcher);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Failed to load\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(EditForm, {\n      defaultValues: data.findTodoByID,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/todo/[id].js"],"names":["useRouter","useSWR","gql","Layout","EditForm","graphQLClient","Todo","router","id","query","fetcher","request","data","error","findTodoByID"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;;AAEA,QAAMC,OAAO,GAAG,MAAOD,KAAP,IAAiB,MAAMJ,aAAa,CAACM,OAAd,CAAsBF,KAAtB,CAAvC;;AAEA,QAAMA,KAAK,GAAGP,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;AASA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBZ,MAAM,CAAC,CAACQ,KAAD,EAAQD,EAAR,CAAD,EAAcE,OAAd,CAA9B;AAEA,MAAIG,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGD,IAAI,gBACH,QAAC,QAAD;AAAU,MAAA,aAAa,EAAEA,IAAI,CAACE,YAA9B;AAA4C,MAAA,EAAE,EAAEN;AAAhD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;AAgCA,eAAeF,IAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport useSWR from 'swr'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport EditForm from '@/components/edit-form'\nimport { graphQLClient } from '@/utils/graphql-client'\n\nconst Todo = () => {\n  const router = useRouter()\n  const { id } = router.query\n\n  const fetcher = async (query) => await graphQLClient.request(query)\n\n  const query = gql`\n    query FindATodoByID($id: ID!) {\n      findTodoByID(id: $id) {\n        task\n        completed\n      }\n    }\n  `\n\n  const { data, error } = useSWR([query, id], fetcher)\n\n  if (error) return <div>Failed to load</div>\n\n  return (\n    <Layout>\n      <h1>Edit todo</h1>\n\n      {data ? (\n        <EditForm defaultValues={data.findTodoByID} id={id} />\n      ): (\n        <div>Loading...</div>\n      )}\n    </Layout>\n  )\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}