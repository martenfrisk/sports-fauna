{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/leagues.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphQLClient } from '@/utils/graphql-client';\nimport Link from 'next/link';\nimport { UserContext } from '@/utils/user-context';\nimport { gql } from 'graphql-request';\nimport { useContext, useEffect } from 'react';\nimport useSWR from 'swr';\n\nvar Leagues = function Leagues(_ref) {\n  _s();\n\n  var token = _ref.token,\n      leagueData = _ref.leagueData;\n\n  var _useContext = useContext(UserContext),\n      userID = _useContext.userID,\n      setUserID = _useContext.setUserID; // const fetcher = (url) => fetch(url).then((r) => r.json())\n\n\n  var _useSWR = useSWR('/api/user'),\n      user = _useSWR.data;\n\n  useEffect(function () {\n    setUserID(user);\n  }, [user]); // const { mutate } = useSWR(\n  // \tgql`\n  //     {\n  //       allLeagues {\n  //         data {\n  //           name\n  //         }\n  //       }\n  //     }\n  //   `,\n  // \tfetcher\n  // )\n\n  var joinLeague = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userID, leagueID) {\n      var mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mutation = gql(_templateObject());\n              variables = {\n                userID: userID,\n                leagueID: leagueID\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables);\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7]]);\n    }));\n\n    return function joinLeague(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var leaveLeague = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userID, leagueID, leagueName) {\n      var mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              mutation = gql(_templateObject2());\n              variables = {\n                userID: userID,\n                leagueID: leagueID,\n                leagueName: leagueName\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables);\n\n            case 5:\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 7]]);\n    }));\n\n    return function leaveLeague(_x3, _x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return leagueData && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Leagues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, _this), leagueData.data.map(function (league) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/league/[id]\",\n            as: \"/league/\".concat(league._id),\n            children: league.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, _this), league.members.data.some(function (member) {\n          return member._id === user.id;\n        }) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return leaveLeague(user.id, league._id, league.name);\n          },\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 8\n        }, _this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return joinLeague(user.id, league._id);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 8\n        }, _this), league.members.data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2\",\n          children: [\"-\", league.members.data.map(function (member) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: member.username\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 10\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 8\n        }, _this)]\n      }, league._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 4\n  }, _this);\n};\n\n_s(Leagues, \"TuDNi+mS28GMXX4QcdXuGDsETGA=\", false, function () {\n  return [useSWR];\n});\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/leagues.tsx"],"names":["graphQLClient","Link","UserContext","gql","useContext","useEffect","useSWR","Leagues","token","leagueData","userID","setUserID","user","data","joinLeague","leagueID","mutation","variables","setHeader","request","console","error","leaveLeague","leagueName","map","league","_id","name","members","some","member","id","length","username"],"mappings":"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","sourcesContent":["import { graphQLClient } from '@/utils/graphql-client'\nimport Link from 'next/link'\nimport { UserContext } from '@/utils/user-context'\nimport { gql } from 'graphql-request'\nimport { useContext, useEffect } from 'react'\nimport useSWR from 'swr'\n\nconst Leagues = ({ token, leagueData }: { token: any, leagueData: any }) => {\n\tconst { userID, setUserID } = useContext(UserContext)\n\t// const fetcher = (url) => fetch(url).then((r) => r.json())\n\tconst { data: user } = useSWR('/api/user')\n\tuseEffect(() => {\n\t\tsetUserID(user)\n\t}, [user])\n\t// const { mutate } = useSWR(\n\t// \tgql`\n\t//     {\n\t//       allLeagues {\n\t//         data {\n\t//           name\n\t//         }\n\t//       }\n\t//     }\n\t//   `,\n\t// \tfetcher\n\t// )\n\n\n\tconst joinLeague = async (userID, leagueID) => {\n\t\tconst mutation = gql`\n      mutation JoinLeague($userID: [ID], $leagueID: ID!) {\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\tconst leaveLeague = async (userID, leagueID, leagueName) => {\n\t\tconst mutation = gql`\n      mutation LeaveLeague($userID: [ID], $leagueID: ID!, $leagueName: String!) {\n        partialUpdateLeague(id: $leagueID, data: { name: $leagueName, members: { disconnect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID,\n\t\t\tleagueName\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\t// mutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\treturn (\n\t\tleagueData && (\n\t\t\t<div>\n\t\t\t\t<p>Leagues</p>\n\t\t\t\t{leagueData.data.map((league) => (\n\t\t\t\t\t<div className=\"flex\" key={league._id}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link href=\"/league/[id]\" as={`/league/${league._id}`}>\n\t\t\t\t\t\t\t\t{league.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{league.members.data.some((member) => member._id === user.id) ? (\n\t\t\t\t\t\t\t<button onClick={() => leaveLeague(user.id, league._id, league.name)}>Leave</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<button onClick={() => joinLeague(user.id, league._id)}>Join</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{league.members.data.length > 0 && (\n\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t{league.members.data.map((member) => (\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2\" key={member._id}>\n\t\t\t\t\t\t\t\t\t\t{member.username}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t)\n}\n\nexport default Leagues"]},"metadata":{},"sourceType":"module"}