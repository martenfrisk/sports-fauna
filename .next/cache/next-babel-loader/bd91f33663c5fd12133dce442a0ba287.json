{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery FindCurrentUser($id: ID!) {\\n\\t\\t\\tfindUserByID(id: $id) {\\n\\t\\t\\t\\temail\\n\\t\\t\\t\\ttodos {\\n\\t\\t\\t\\t\\tdata {\\n\\t\\t\\t\\t\\t\\ttask\\n\\t\\t\\t\\t\\t\\tcompleted\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}    \\n\\t\\t}\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect, useState } from 'react';\nimport { gql } from 'graphql-request';\nimport useSWR from 'swr';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nvar Profile = function Profile(_ref) {\n  _s();\n\n  var token = _ref.token,\n      data = _ref.data;\n  // const { data } = useSWR('/api/user')\n  console.log(data);\n\n  var _useState = useState([]),\n      userTodos = _useState[0],\n      setUserTodos = _useState[1];\n\n  var query = gql(_templateObject());\n  var variables = {\n    id: data && data.id\n  };\n\n  var fetcher = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return graphQLClient(token).request(query, variables);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetcher(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var info = useSWR([query, variables], fetcher); // console.log(info)\n  // const { data, error } = useSWR([query, variables], fetcher)\n\n  useEffect(function () {\n    setUserTodos(data);\n  }, [data]); // if (error) return (\n  // \t<Layout>\n  // \t\t<div>Error...</div>\n  // \t</Layout>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(userTodos)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Profile, \"NvtHGxkTsbI0iwJ98YJK/Oi11tc=\", false, function () {\n  return [useSWR];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["useEffect","useState","gql","useSWR","Layout","graphQLClient","Profile","token","data","console","log","userTodos","setUserTodos","query","variables","id","fetcher","request","info","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA8C;AAAA;;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAC7D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAF6D,kBAG3BP,QAAQ,CAAC,EAAD,CAHmB;AAAA,MAGtDU,SAHsD;AAAA,MAG3CC,YAH2C;;AAI7D,MAAMC,KAAK,GAAGX,GAAH,mBAAX;AAcA,MAAMY,SAAS,GAAG;AACjBC,IAAAA,EAAE,EAAEP,IAAI,IAAIA,IAAI,CAACO;AADA,GAAlB;;AAIA,MAAMC,OAAO;AAAA,yEAAG,iBAAOH,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuBR,aAAa,CAACE,KAAD,CAAb,CAAqBU,OAArB,CAA6BJ,KAA7B,EAAoCC,SAApC,CAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPE,OAAO;AAAA;AAAA;AAAA,KAAb;;AACA,MAAME,IAAI,GAAGf,MAAM,CAAC,CAACU,KAAD,EAAQC,SAAR,CAAD,EAAqBE,OAArB,CAAnB,CAvB6D,CAwB7D;AACA;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACfY,IAAAA,YAAY,CAACJ,IAAD,CAAZ;AACA,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT,CA1B6D,CA8B7D;AACA;AACA;AACA;AACA;;AACA,sBACC,QAAC,MAAD;AAAA,cACGA,IAAI,gBACL;AAAA,gBACEW,IAAI,CAACC,SAAL,CAAeT,SAAf;AADF;AAAA;AAAA;AAAA;AAAA,aADK,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,WADD;AAWA,CA9CD;;GAAML,O;UAuBQH,M;;;KAvBRG,O;;AA4DN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\nimport Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport user from './api/user'\n\nconst Profile = ({ token, data }: {token: any, data: any}) => {\n\t// const { data } = useSWR('/api/user')\n\tconsole.log(data)\n\tconst [userTodos, setUserTodos] = useState([])\n\tconst query = gql`\n\t\tquery FindCurrentUser($id: ID!) {\n\t\t\tfindUserByID(id: $id) {\n\t\t\t\temail\n\t\t\t\ttodos {\n\t\t\t\t\tdata {\n\t\t\t\t\t\ttask\n\t\t\t\t\t\tcompleted\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}    \n\t\t}\n\t`\n\n\tconst variables = {\n\t\tid: data && data.id\n\t}\n\n\tconst fetcher = async (query) => await graphQLClient(token).request(query, variables)\n\tconst info = useSWR([query, variables], fetcher)\n\t// console.log(info)\n\t// const { data, error } = useSWR([query, variables], fetcher)\n\tuseEffect(() => {\n\t\tsetUserTodos(data)\n\t}, [data])\n\n\t// if (error) return (\n\t// \t<Layout>\n\t// \t\t<div>Error...</div>\n\t// \t</Layout>\n\t// )\n\treturn (\n\t\t<Layout>\n\t\t\t{ data ? (\n\t\t\t\t<div>\n\t\t\t\t\t{JSON.stringify(userTodos)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = await getAuthCookie(ctx.req)\n\tconst data = user(token)\n\tconsole.log({data})\n\treturn { \n\t\tprops: { \n\t\t\ttoken: token || null,\n\t\t\tdata: JSON.stringify(data),\n\t\t}\n\t}\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}