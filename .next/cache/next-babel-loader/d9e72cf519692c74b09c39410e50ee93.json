{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/leagues.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation JoinLeague($userID: ID!, $leagueID: ID!) {\\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\\n          name\\n        }\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        allLeagues {\\n          data {\\n            name\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphQLClient } from '@/utils/graphql-client';\nimport Link from 'next/link';\nimport { UserContext } from '@/utils/user-context';\nimport { gql } from 'graphql-request';\nimport { useContext, useEffect } from 'react';\nimport useSWR from 'swr';\n\nvar Leagues = function Leagues(_ref) {\n  _s();\n\n  var token = _ref.token,\n      leagueData = _ref.leagueData;\n\n  var _useContext = useContext(UserContext),\n      userID = _useContext.userID,\n      setUserID = _useContext.setUserID;\n\n  var fetcher = function fetcher(url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  };\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  useEffect(function () {\n    setUserID(function () {\n      return data;\n    });\n  }, []);\n  if (error) console.error(error);\n\n  var _useSWR2 = useSWR(gql(_templateObject()), fetcher),\n      mutate = _useSWR2.mutate;\n\n  var joinLeague = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userID, leagueID) {\n      var mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mutation = gql(_templateObject2());\n              variables = {\n                userID: userID,\n                leagueID: leagueID\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return graphQLClient(token).setHeader('X-Schema-Preview', 'partial-update-mutation').request(mutation, variables);\n\n            case 5:\n              mutate();\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function joinLeague(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return leagueData && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Leagues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, _this), leagueData.data.map(function (league) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/league/[id]\",\n            as: \"/league/\".concat(league._id),\n            children: league.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: function onClick() {\n            return joinLeague(userID, league._id);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, _this), league.members.data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2\",\n          children: [\"-\", league.members.data.map(function (member) {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: member.username\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 10\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }, _this)]\n      }, league._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 4\n  }, _this);\n};\n\n_s(Leagues, \"Gf+zA1/euEZCP0delUExksW9/k0=\", false, function () {\n  return [useSWR, useSWR];\n});\n\n_c = Leagues;\nexport default Leagues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/leagues.tsx"],"names":["graphQLClient","Link","UserContext","gql","useContext","useEffect","useSWR","Leagues","token","leagueData","userID","setUserID","fetcher","url","fetch","then","r","json","data","error","console","mutate","joinLeague","leagueID","mutation","variables","setHeader","request","map","league","_id","name","members","length","member","username"],"mappings":"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","sourcesContent":["import { graphQLClient } from '@/utils/graphql-client'\nimport Link from 'next/link'\nimport { UserContext } from '@/utils/user-context'\nimport { gql } from 'graphql-request'\nimport { useContext, useEffect } from 'react'\nimport useSWR from 'swr'\n\nconst Leagues = ({ token, leagueData }: { token: any, leagueData: any }) => {\n\tconst { userID, setUserID } = useContext(UserContext)\n\tconst fetcher = (url) => fetch(url).then((r) => r.json())\n\tconst { data, error } = useSWR('/api/user', fetcher)\n\tuseEffect(() => {\n\t\tsetUserID(() => data)\n\t}, [])\n\tif (error) console.error(error)\n\tconst { mutate } = useSWR(\n\t\tgql`\n      {\n        allLeagues {\n          data {\n            name\n          }\n        }\n      }\n    `,\n\t\tfetcher\n\t)\n\n\n\tconst joinLeague = async (userID, leagueID) => {\n\t\tconst mutation = gql`\n      mutation JoinLeague($userID: ID!, $leagueID: ID!) {\n        partialUpdateLeague(id: $leagueID, data: { members: { connect: $userID } } ) {\n          name\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tuserID,\n\t\t\tleagueID\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token)\n\t\t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t\t\t\t.request(mutation, variables)\n\t\t\tmutate()\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t}\n\n\treturn (\n\t\tleagueData && (\n\t\t\t<div>\n\t\t\t\t<p>Leagues</p>\n\t\t\t\t{leagueData.data.map((league) => (\n\t\t\t\t\t<div className=\"flex\" key={league._id}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Link href=\"/league/[id]\" as={`/league/${league._id}`}>\n\t\t\t\t\t\t\t\t{league.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span onClick={() => joinLeague(userID, league._id)}>Join</span>\n\t\t\t\t\t\t{league.members.data.length > 0 && (\n\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t\t{league.members.data.map((member) => (\n\t\t\t\t\t\t\t\t\t<span className=\"ml-2\" key={member._id}>\n\t\t\t\t\t\t\t\t\t\t{member.username}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t)\n\t)\n}\n\nexport default Leagues"]},"metadata":{},"sourceType":"module"}