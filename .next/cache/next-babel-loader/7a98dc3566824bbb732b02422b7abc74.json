{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation UpdateLeague($id: ID!, $teams: [String]) {\\n        updateLeagueOptions(id: $id, data: { teams: $teams }) {\\n          teams\\n\\t\\t\\t\\t\\tpublic\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\nimport TeamPicker from '@/components/teampicker';\nimport { useState } from 'react';\n\nvar League = function League(_ref) {\n  _s();\n\n  var data = _ref.data,\n      teams = _ref.teams,\n      token = _ref.token;\n\n  var _useState = useState(data.options ? data.options.teams : []),\n      pickedTeam = _useState[0],\n      setPickedTeam = _useState[1];\n\n  var _useState2 = useState(data.options ? data.options : {}),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState(''),\n      errorMessage = _useState3[0],\n      setErrorMessage = _useState3[1];\n\n  var _useState4 = useState(''),\n      updateMessage = _useState4[0],\n      setUpdateMessage = _useState4[1];\n\n  var updateTeam = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var query, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = gql(_templateObject());\n              variables = {\n                id: data.options._id,\n                teams: pickedTeam\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return graphQLClient(token).request(query, variables);\n\n            case 5:\n              setTimeout(function () {\n                setUpdateMessage('');\n              }, 4000);\n              setUpdateMessage('Changes saved');\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n              setErrorMessage(_context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function updateTeam() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, _this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"League name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League members:\", data.members.data.length > 0 ? data.members.data.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.username, \" (\", item.email, \")\"]\n          }, item.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No members :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League options:\", data.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-4 text-sm\",\n            children: data.options[\"class\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"\".concat(options[\"public\"] && 'bg-blue-300'),\n              onClick: function onClick() {\n                return setOptions({\n                  \"public\": true\n                });\n              },\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 10\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"\".concat(!options[\"public\"] && 'bg-blue-300'),\n              onClick: function onClick() {\n                return setOptions({\n                  \"public\": false\n                });\n              },\n              children: \"Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 10\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No options set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 8\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return updateTeam();\n      },\n      children: \"Click to save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, _this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, _this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(TeamPicker, {\n      teams: teams,\n      picker: [pickedTeam, setPickedTeam]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(League, \"WNh3sl5RxpFOBi4xUrQ89tsMBo4=\");\n\n_c = League;\nexport var __N_SSP = true;\nexport default League;\n\nvar _c;\n\n$RefreshReg$(_c, \"League\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["gql","Layout","graphQLClient","TeamPicker","useState","League","data","teams","token","options","pickedTeam","setPickedTeam","setOptions","errorMessage","setErrorMessage","updateMessage","setUpdateMessage","updateTeam","query","variables","id","_id","request","setTimeout","console","error","message","name","members","length","map","item","username","email"],"mappings":"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","sourcesContent":["// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport TeamPicker from '@/components/teampicker'\nimport { useState } from 'react'\n\nconst League = ({ data, teams, token }: { data: any, teams: any, token: any }) => {\n\tconst [pickedTeam, setPickedTeam] = useState(data.options ? data.options.teams : [])\n\tconst [options, setOptions] = useState(data.options ? data.options : {})\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [updateMessage, setUpdateMessage] = useState('')\n\tconst updateTeam = async () => {\n\t\tconst query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String]) {\n        updateLeagueOptions(id: $id, data: { teams: $teams }) {\n          teams\n\t\t\t\t\tpublic\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid: data.options._id,\n\t\t\tteams: pickedTeam,\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, variables)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetUpdateMessage('')\n\t\t\t}, 4000)\n\t\t\tsetUpdateMessage('Changes saved')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\n\t\t\t{data ? (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague members: \n\t\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t\t{item.username} ({item.email})\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague options:\n\t\t\t\t\t\t{data.options ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className=\"mr-4 text-sm\">\n\t\t\t\t\t\t\t\t\t{data.options.class}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-sm\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName={`${options.public && 'bg-blue-300'}`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions({ public: true })}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPublic\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName={`${!options.public && 'bg-blue-300'}`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions({ public: false })}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPrivate\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo options set\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t): (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t\t<button onClick={() => updateTeam()}>Click to save changes</button>\n\n\t\t\t{updateMessage && (\n\t\t\t\t<p>{updateMessage}</p>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<p>{errorMessage}</p>\n\t\t\t)}\n\t\t\t<TeamPicker teams={teams} picker={[pickedTeam, setPickedTeam]} />\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\n\tconst { teams } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then((res) => res.json())\n\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tdata: data?.findLeagueByID,\n\t\tteams\n\t} }\n}\n\nexport default League"]},"metadata":{},"sourceType":"module"}