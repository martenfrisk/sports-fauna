{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/profile.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        allTodos {\\n          data {\\n            _id\\n            task\\n            completed\\n          }\\n        }    \\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// import { useEffect, useState } from 'react'\nimport { gql } from 'graphql-request';\nimport useSWR from 'swr';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nvar Profile = function Profile(_ref) {\n  _s();\n\n  var token = _ref.token;\n\n  var fetcher = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return graphQLClient(token).request(query);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetcher(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useSWR = useSWR(gql(_templateObject()), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Profile, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/profile.tsx"],"names":["gql","useSWR","Layout","graphQLClient","Profile","token","fetcher","query","request","data","error","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6B;AAAA;;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;;AAC5C,MAAMC,OAAO;AAAA,yEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuBJ,aAAa,CAACE,KAAD,CAAb,CAAqBG,OAArB,CAA6BD,KAA7B,CAAvB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPD,OAAO;AAAA;AAAA;AAAA,KAAb;;AAD4C,gBAEpBL,MAAM,CAC7BD,GAD6B,qBAWxBM,OAXwB,CAFc;AAAA,MAEpCG,IAFoC,WAEpCA,IAFoC;AAAA,MAE9BC,KAF8B,WAE9BA,KAF8B;;AAe5C,MAAIA,KAAJ,EAAW,oBACV,QAAC,MAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,WADU;AAKX,sBACC,QAAC,MAAD;AAAA,cACGD,IAAI,gBACL;AAAA,gBACEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AADF;AAAA;AAAA;AAAA;AAAA,aADK,gBAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,WADD;AAWA,CA/BD;;GAAML,O;UAEmBH,M;;;KAFnBG,O;;AA0CN,eAAeA,OAAf","sourcesContent":["// import { useEffect, useState } from 'react'\nimport { gql } from 'graphql-request'\nimport useSWR from 'swr'\nimport Layout from '@/components/layout'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport { graphQLClient } from '@/utils/graphql-client'\n\nconst Profile = ({ token }: {token: any}) => {\n\tconst fetcher = async (query) => await graphQLClient(token).request(query)\n\tconst { data, error } = useSWR(\n\t\tgql`\n      {\n        allTodos {\n          data {\n            _id\n            task\n            completed\n          }\n        }    \n      }\n    `, fetcher\n\t)\n\tif (error) return (\n\t\t<Layout>\n\t\t\t<div>Error...</div>\n\t\t</Layout>\n\t)\n\treturn (\n\t\t<Layout>\n\t\t\t{ data ? (\n\t\t\t\t<div>\n\t\t\t\t\t{JSON.stringify(data)}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = await getAuthCookie(ctx.req)\n\treturn { \n\t\tprops: { \n\t\t\ttoken: token || null,\n\t\t}\n\t}\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}