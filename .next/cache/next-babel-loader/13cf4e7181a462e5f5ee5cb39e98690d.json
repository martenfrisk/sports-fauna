{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/new.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation CreateATodo($task: String!, $owner: ID!) {\\n        createTodo(data: { task: $task, completed: false, owner: { connect: $owner } }) {\\n          task\\n          completed\\n\\t\\t\\t\\t\\towner {\\n\\t\\t\\t\\t\\t\\t_id\\n\\t\\t\\t\\t\\t}\\n        }\\n      }\\n\\t\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport Router from 'next/router';\nimport useSWR from 'swr';\nimport { gql } from 'graphql-request';\nimport { useForm } from 'react-hook-form';\nimport Layout from '../components/layout';\nimport { graphQLClient } from '../utils/graphql-client';\n\nvar New = function New(_ref) {\n  _s();\n\n  var token = _ref.token;\n\n  var _useState = useState(''),\n      errorMessage = _useState[0],\n      setErrorMessage = _useState[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var _useSWR = useSWR('/api/user'),\n      user = _useSWR.data;\n\n  var onSubmit = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var task, mutation, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              task = _ref2.task;\n              if (errorMessage) setErrorMessage('');\n              mutation = gql(_templateObject());\n              variables = {\n                task: task,\n                owner: user && user.id\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return graphQLClient(token).request(mutation, variables);\n\n            case 7:\n              Router.push('/');\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](4);\n              console.error(_context.t0);\n              setErrorMessage(_context.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl\",\n      children: \"Create new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"test\",\n            name: \"task\",\n            className: \"px-4 py-2 text-gray-700 bg-blue-200 rounded-md\",\n            placeholder: \"e.g. do something\",\n            ref: register({\n              required: 'Task is required'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, _this), errors.task && /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"alert\",\n            children: errors.task.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, _this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        role: \"alert\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(New, \"deVtGdSpSQ/MJ2rCZtNz0XWOmE0=\", false, function () {\n  return [useForm, useSWR];\n});\n\n_c = New;\nexport var __N_SSP = true;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/new.tsx"],"names":["useState","Router","useSWR","gql","useForm","Layout","graphQLClient","New","token","errorMessage","setErrorMessage","handleSubmit","register","errors","user","data","onSubmit","task","mutation","variables","owner","id","request","push","console","error","message","required"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Router from 'next/router'\nimport useSWR from 'swr'\nimport { gql } from 'graphql-request'\nimport { useForm } from 'react-hook-form'\nimport Layout from '../components/layout'\nimport { graphQLClient } from '../utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\n\nconst New = ({token}: {token: any}) => {\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst { handleSubmit, register, errors } = useForm()\n\tconst { data: user } = useSWR('/api/user')\n\n\tconst onSubmit = handleSubmit(async ({ task }) => {\n\t\tif (errorMessage) setErrorMessage('')\n\n\t\tconst mutation = gql`\n      mutation CreateATodo($task: String!, $owner: ID!) {\n        createTodo(data: { task: $task, completed: false, owner: { connect: $owner } }) {\n          task\n          completed\n\t\t\t\t\towner {\n\t\t\t\t\t\t_id\n\t\t\t\t\t}\n        }\n      }\n\t\t`\n\t\t\n\t\tconst variables = {\n\t\t\ttask,\n\t\t\towner: user && user.id,\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(mutation, variables)\n\t\t\tRouter.push('/')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t})\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1 className=\"text-3xl\">Create new todo</h1>\n\t\t\t<div className=\"flex flex-col items-center w-full\">\n\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<div  className=\"flex flex-col\">\n\t\t\t\t\t\t<label>Task</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"test\"\n\t\t\t\t\t\t\tname=\"task\"\n\t\t\t\t\t\t\tclassName=\"px-4 py-2 text-gray-700 bg-blue-200 rounded-md\"\n\t\t\t\t\t\t\tplaceholder=\"e.g. do something\"\n\t\t\t\t\t\t\tref={register({ required: 'Task is required' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.task && (\n\t\t\t\t\t\t\t<span role=\"alert\">\n\t\t\t\t\t\t\t\t{errors.task.message}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button type=\"submit\">Create</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t{errorMessage && (\n\t\t\t\t\t<p role=\"alert\">\n\t\t\t\t\t\t{errorMessage}\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\n\nexport const getServerSideProps = (ctx: any) => {\n\tconst token = getAuthCookie(ctx.req)\n\treturn { props: { token: token || null } }\n}\n\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}