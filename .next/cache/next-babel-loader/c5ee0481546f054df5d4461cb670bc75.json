{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\";\n// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport TeamPicker from '@/components/teampicker';\nimport { useState } from 'react';\n\nconst League = ({\n  data,\n  teams,\n  token\n}) => {\n  const {\n    0: pickedTeam,\n    1: setPickedTeam\n  } = useState(data.options ? data.options.teams : []);\n  const {\n    0: options,\n    1: setOptions\n  } = useState(data.options ? data.options : {});\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n  const {\n    0: updateMessage,\n    1: setUpdateMessage\n  } = useState('');\n\n  const updateTeam = async () => {\n    const query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean) {\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public }) {\n          teams\n\t\t\t\t\tpublic\n        }\n      }\n    `;\n    const variables = {\n      id: data.options._id,\n      teams: pickedTeam,\n      public: options.public\n    };\n\n    try {\n      await graphQLClient(token).request(query, variables);\n      setTimeout(() => {\n        setUpdateMessage('');\n      }, 4000);\n      setUpdateMessage('Changes saved');\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"League name: \", data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League members:\", data.members.data.length > 0 ? data.members.data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [item.username, \" (\", item.email, \")\"]\n        }, item.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No members :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"League options:\", data.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-4 text-sm\",\n            children: data.options.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-start justify-start text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${options.public && 'bg-blue-300'} w-20 p-2 rounded-md`,\n              onClick: () => setOptions({\n                public: true\n              }),\n              children: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${!options.public && 'bg-blue-300'}  w-20 p-2 rounded-md`,\n              onClick: () => setOptions({\n                public: false\n              }),\n              children: \"Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-2 text-sm italics\",\n          children: \"No options set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateTeam(),\n      children: \"Click to save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TeamPicker, {\n      teams: teams,\n      picker: [pickedTeam, setPickedTeam]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getServerSideProps(ctx) {\n  const {\n    id\n  } = ctx.params;\n  const token = getAuthCookie(ctx.req);\n  const {\n    teams\n  } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then(res => res.json());\n  const query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n  const res = await graphQLClient(token).request(query, {\n    id\n  });\n  console.log(res);\n  const data = await res;\n  return {\n    props: {\n      token: token || null,\n      data: data === null || data === void 0 ? void 0 : data.findLeagueByID,\n      teams\n    }\n  };\n}\nexport default League;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["gql","Layout","graphQLClient","getAuthCookie","TeamPicker","useState","League","data","teams","token","pickedTeam","setPickedTeam","options","setOptions","errorMessage","setErrorMessage","updateMessage","setUpdateMessage","updateTeam","query","variables","id","_id","public","request","setTimeout","error","console","message","name","members","length","map","item","username","email","class","getServerSideProps","ctx","params","req","fetch","then","res","json","log","props","findLeagueByID"],"mappings":"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","sourcesContent":["// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport TeamPicker from '@/components/teampicker'\nimport { useState } from 'react'\n\nconst League = ({ data, teams, token }: { data: any, teams: any, token: any }) => {\n\tconst [pickedTeam, setPickedTeam] = useState(data.options ? data.options.teams : [])\n\tconst [options, setOptions] = useState(data.options ? data.options : {})\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [updateMessage, setUpdateMessage] = useState('')\n\tconst updateTeam = async () => {\n\t\tconst query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean) {\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public }) {\n          teams\n\t\t\t\t\tpublic\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid: data.options._id,\n\t\t\tteams: pickedTeam,\n\t\t\tpublic: options.public\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, variables)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetUpdateMessage('')\n\t\t\t}, 4000)\n\t\t\tsetUpdateMessage('Changes saved')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\n\t\t\t{data ? (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague members: \n\t\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t\t{item.username} ({item.email})\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague options:\n\t\t\t\t\t\t{data.options ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className=\"mr-4 text-sm\">\n\t\t\t\t\t\t\t\t\t{data.options.class}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<div className=\"flex flex-col items-start justify-start text-sm\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName={`${options.public && 'bg-blue-300'} w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions({ public: true })}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPublic\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName={`${!options.public && 'bg-blue-300'}  w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions({ public: false })}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPrivate\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo options set\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t): (\n\t\t\t\t<div>Loading...</div>\n\t\t\t)}\n\t\t\t<button onClick={() => updateTeam()}>Click to save changes</button>\n\n\t\t\t{updateMessage && (\n\t\t\t\t<p>{updateMessage}</p>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<p>{errorMessage}</p>\n\t\t\t)}\n\t\t\t<TeamPicker teams={teams} picker={[pickedTeam, setPickedTeam]} />\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\n\tconst { teams } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then((res) => res.json())\n\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tdata: data?.findLeagueByID,\n\t\tteams\n\t} }\n}\n\nexport default League"]},"metadata":{},"sourceType":"module"}