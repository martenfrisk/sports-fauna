{"ast":null,"code":"import _regeneratorRuntime from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/marten.frisk/nextfauna/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/components/edit-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation UpdateATodo($id: ID!, $task: String!, $completed: Boolean!) {\\n        updateTodo(id: $id, data: { task: $task, completed: $completed}) {\\n          task\\n          completed\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { gql } from 'graphql-request';\nimport { useForm } from 'react-hook-form';\nimport { graphQLClient } from '@/utils/graphql-client';\n\nvar EditForm = function EditForm(_ref) {\n  _s();\n\n  var defaultValues = _ref.defaultValues,\n      id = _ref.id;\n\n  var _useState = useState(''),\n      errorMessage = _useState[0],\n      setErrorMessage = _useState[1];\n\n  var _useForm = useForm({\n    defaultValues: _objectSpread({}, defaultValues)\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var task, completed, query, variables;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              task = _ref2.task, completed = _ref2.completed;\n              if (errorMessage) setErrorMessage('');\n              query = gql(_templateObject());\n              variables = {\n                id: id,\n                task: task,\n                completed: completed\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return graphQLClient.request(query, variables);\n\n            case 7:\n              Router.push('/');\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](4);\n              console.error(_context.t0);\n              setErrorMessage(_context.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  useEffect(function () {\n    reset(defaultValues);\n  }, [reset, defaultValues]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"task\",\n          ref: register({\n            required: 'Task is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), errors.task && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          children: errors.task.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"completed\",\n          ref: register()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this), errors.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"alert\",\n          children: errors.completed.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(EditForm, \"Y2mNNFWGidT4ZCxShaH4PgWsqp8=\", false, function () {\n  return [useForm];\n});\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/components/edit-form.js"],"names":["useState","useEffect","Router","gql","useForm","graphQLClient","EditForm","defaultValues","id","errorMessage","setErrorMessage","handleSubmit","register","reset","errors","onSubmit","task","completed","query","variables","request","push","console","error","message","required"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Router from 'next/router'\nimport { gql } from 'graphql-request'\nimport { useForm } from 'react-hook-form'\nimport { graphQLClient } from '@/utils/graphql-client'\n\nconst EditForm = ({ defaultValues, id }) => {\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    defaultValues: {\n      ...defaultValues,\n    },\n  })\n\n  const onSubmit = handleSubmit(async ({ task, completed }) => {\n    if (errorMessage) setErrorMessage('')\n\n    const query = gql`\n      mutation UpdateATodo($id: ID!, $task: String!, $completed: Boolean!) {\n        updateTodo(id: $id, data: { task: $task, completed: $completed}) {\n          task\n          completed\n        }\n      }\n    `\n\n    const variables = {\n      id,\n      task,\n      completed,\n    }\n\n    try {\n      await graphQLClient.request(query, variables)\n      Router.push('/')\n    } catch (error) {\n      console.error(error)\n      setErrorMessage(error.message)\n    }\n  }) \n\n  useEffect(() => {\n    reset(defaultValues)\n  }, [reset, defaultValues])\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label>Task</label>\n          <input\n            type=\"text\"\n            name=\"task\"\n            ref={register({ required: 'Task is required' })}\n          />\n          {errors.task && (\n            <span role=\"alert\">\n              {errors.task.message}\n            </span>\n          )}\n        </div>\n\n        <div>\n          <label>Completed</label>\n          <input type=\"checkbox\" name=\"completed\" ref={register()} />\n          {errors.completed && (\n            <span role=\"alert\">\n              {errors.completed.message}\n            </span>\n          )}\n        </div>\n\n        <div>\n          <button type=\"submit\">Update</button>\n        </div>\n      </form>\n\n      {errorMessage && (\n        <p role=\"alert\">\n          {errorMessage}\n        </p>\n      )}\n    </>\n  )\n}\n\nexport default EditForm"]},"metadata":{},"sourceType":"module"}