{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/league/[id].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request';\nimport Layout from '@/components/layout';\nimport { graphQLClient } from '@/utils/graphql-client';\nimport { getAuthCookie } from '@/utils/auth-cookies';\nimport TeamPicker from '@/components/teampicker';\nimport { useEffect, useState } from 'react';\n\nconst League = ({\n  data,\n  teams,\n  token\n}) => {\n  const {\n    0: pickedTeam,\n    1: setPickedTeam\n  } = useState(data.options ? data.options.teams : []);\n  const {\n    0: options,\n    1: setOptions\n  } = useState(data.options ? data.options : {});\n  const {\n    0: upcomingEvents,\n    1: setUpcomingEvents\n  } = useState(null);\n\n  const getEvents = async teamId => {\n    const events = await fetch(`https://www.thesportsdb.com/api/v1/json/1/eventsnext.php?id=${teamId}`).then(res => res.json());\n    setUpcomingEvents(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [teamId]: events\n    }));\n    console.log(upcomingEvents);\n  };\n\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n  const {\n    0: updateMessage,\n    1: setUpdateMessage\n  } = useState('');\n\n  const updateTeam = async () => {\n    const query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean, $class: LeagueType) {\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public, class: $class }) {\n          teams\n\t\t\t\t\tpublic\n\t\t\t\t\tclass\n        }\n      }\n    `;\n    const variables = {\n      id: data.options._id,\n      teams: pickedTeam,\n      public: options.public,\n      class: options.class\n    };\n\n    try {\n      await graphQLClient(token).request(query, variables);\n      setTimeout(() => {\n        setUpdateMessage('');\n      }, 4000);\n      setUpdateMessage('Changes saved');\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(error.message);\n    }\n  };\n\n  useEffect(() => {\n    pickedTeam.map(team => {\n      getEvents(team);\n      console.log({\n        team\n      }); // return (\n      // \tJSON.stringify(upcomingEvents[team])\n      // )\n    });\n  }, [pickedTeam]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: \"Upcoming games for your teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), upcomingEvents !== null && pickedTeam !== [] && pickedTeam.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: upcomingEvents[team].events[0].strEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: upcomingEvents[team].events[1].strEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: upcomingEvents[team].events[2].strEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, team, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"League name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"League members:\", data.members.data.length > 0 ? data.members.data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.username, \" (\", item.email, \")\"]\n          }, item.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 10\n          }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-sm italics\",\n            children: \"No members :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"League options:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: options.class,\n            onChange: e => setOptions(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              class: e.target.value\n            })),\n            children: ['SINGLETEAM', 'SINGLEDIVISION', 'MULTITEAM', 'MULTIDIVISION', 'ANY'].map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 95\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this), data.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-start justify-start text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `${options.public && 'bg-blue-300'} w-20 p-2 rounded-md`,\n                onClick: () => setOptions(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  public: true\n                })),\n                children: \"Public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `${!options.public && 'bg-blue-300'}  w-20 p-2 rounded-md`,\n                onClick: () => setOptions(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  public: false\n                })),\n                children: \"Private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 text-sm italics\",\n            children: \"No options set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateTeam(),\n      children: \"Click to save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this), updateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TeamPicker, {\n      teams: teams,\n      picker: [pickedTeam, setPickedTeam]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getServerSideProps(ctx) {\n  const {\n    id\n  } = ctx.params;\n  const token = getAuthCookie(ctx.req);\n  const {\n    teams\n  } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then(res => res.json());\n  const query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n  const res = await graphQLClient(token).request(query, {\n    id\n  });\n  console.log(res);\n  const data = await res;\n  return {\n    props: {\n      token: token || null,\n      data: data === null || data === void 0 ? void 0 : data.findLeagueByID,\n      teams\n    }\n  };\n}\nexport default League;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/league/[id].tsx"],"names":["gql","Layout","graphQLClient","getAuthCookie","TeamPicker","useEffect","useState","League","data","teams","token","pickedTeam","setPickedTeam","options","setOptions","upcomingEvents","setUpcomingEvents","getEvents","teamId","events","fetch","then","res","json","prev","console","log","errorMessage","setErrorMessage","updateMessage","setUpdateMessage","updateTeam","query","variables","id","_id","public","class","request","setTimeout","error","message","map","team","strEvent","name","members","length","item","username","email","e","target","value","getServerSideProps","ctx","params","req","props","findLeagueByID"],"mappings":"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","sourcesContent":["// import { useRouter } from 'next/router'\nimport { gql } from 'graphql-request'\nimport Layout from '@/components/layout'\nimport { graphQLClient } from '@/utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\nimport TeamPicker from '@/components/teampicker'\nimport { useEffect, useState } from 'react'\n\nconst League = ({ data, teams, token }: { data: any, teams: any, token: any }) => {\n\tconst [pickedTeam, setPickedTeam] = useState(data.options ? data.options.teams : [])\n\tconst [options, setOptions] = useState(data.options ? data.options : {})\n\tconst [upcomingEvents, setUpcomingEvents] = useState(null)\n\n\tconst getEvents = async (teamId) => {\n\t\tconst events = await fetch(`https://www.thesportsdb.com/api/v1/json/1/eventsnext.php?id=${teamId}`).then((res) => res.json())\n\t\tsetUpcomingEvents((prev) => ({...prev, [teamId]: events}))\n\t\tconsole.log(upcomingEvents)\n\t}\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst [updateMessage, setUpdateMessage] = useState('')\n\tconst updateTeam = async () => {\n\t\tconst query = gql`\n      mutation UpdateLeague($id: ID!, $teams: [String], $public: Boolean, $class: LeagueType) {\n        updateLeagueOptions(id: $id, data: { teams: $teams, public: $public, class: $class }) {\n          teams\n\t\t\t\t\tpublic\n\t\t\t\t\tclass\n        }\n      }\n    `\n\n\t\tconst variables = {\n\t\t\tid: data.options._id,\n\t\t\tteams: pickedTeam,\n\t\t\tpublic: options.public,\n\t\t\tclass: options.class\n\t\t}\n\n\t\ttry {\n\t\t\tawait graphQLClient(token).request(query, variables)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetUpdateMessage('')\n\t\t\t}, 4000)\n\t\t\tsetUpdateMessage('Changes saved')\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tpickedTeam.map((team) => {\n\t\t\tgetEvents(team)\n\t\t\tconsole.log({team})\n\t\t\t// return (\n\t\t\t// \tJSON.stringify(upcomingEvents[team])\n\t\t\t// )\n\t\t}\n\t\t)\n\t}, [pickedTeam])\n\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>League info</h1>\n\t\t\t<div className=\"flex w-full\">\n\t\t\t\t<div className=\"flex flex-wrap w-1/2\">\n\t\t\t\t\t<div className=\"w-full\">\n\t\t\t\t\t\tUpcoming games for your teams\n\t\t\t\t\t</div>\n\t\t\t\t\t{upcomingEvents !== null && pickedTeam !== [] && (\n\t\t\t\t\t\tpickedTeam.map((team) => (\n\t\t\t\t\t\t\t<div className=\"w-1/2\" key={team}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{upcomingEvents[team].events[0].strEvent}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{upcomingEvents[team].events[1].strEvent}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{upcomingEvents[team].events[2].strEvent}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{data ? (\n\t\t\t\t\t<div className=\"w-1/2\">\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\tLeague name: {data.name}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague members: \n\t\t\t\t\t\t\t{data.members.data.length > 0 ? (\n\t\t\t\t\t\t\t\tdata.members.data.map((item) => (\n\t\t\t\t\t\t\t\t\t<div key={item.username}>\n\t\t\t\t\t\t\t\t\t\t{item.username} ({item.email})\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo members :(\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\tLeague options:\n\t\t\t\t\t\t\t<select value={options.class} onChange={(e) => setOptions((prev) => ({...prev, class: e.target.value}))}>\n\t\t\t\t\t\t\t\t{['SINGLETEAM',\t'SINGLEDIVISION', 'MULTITEAM', 'MULTIDIVISION', 'ANY'].map((item) => (<option key={item}>{item}</option>))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{data.options ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-col items-start justify-start text-sm\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${options.public && 'bg-blue-300'} w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions((prev) => ({...prev, public: true }))}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPublic\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${!options.public && 'bg-blue-300'}  w-20 p-2 rounded-md`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOptions((prev) => ({...prev, public: false }))}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tPrivate\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"ml-2 text-sm italics\">\n\t\t\t\t\t\t\t\tNo options set\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t): (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button onClick={() => updateTeam()}>Click to save changes</button>\n\n\t\t\t{updateMessage && (\n\t\t\t\t<p>{updateMessage}</p>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<p>{errorMessage}</p>\n\t\t\t)}\n\t\t\t<TeamPicker teams={teams} picker={[pickedTeam, setPickedTeam]} />\n\n\t\t</Layout>\n\t)\n}\n\n\nexport async function getServerSideProps(ctx: any) {\n\tconst { id } = ctx.params\n\tconst token = getAuthCookie(ctx.req)\n\n\tconst { teams } = await fetch('https://www.thesportsdb.com/api/v1/json/1/lookup_all_teams.php?id=4328').then((res) => res.json())\n\n\tconst query = gql`\n\t\tquery FindLeague($id: ID!) {\n\t\t\tfindLeagueByID(id: $id) {\n\t\t\t\tname\n\t\t\t\t_id\n\t\t\t\toptions {\n\t\t\t\t\t_id\n\t\t\t\t\tclass\n\t\t\t\t\tpublic\n\t\t\t\t\tteams\n\t\t\t\t\tdivisions\n\t\t\t\t}\n\t\t\t\tmembers {\n\t\t\t\t\tdata {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tusername\n\t\t\t\t\t\temail\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}`\n\tconst res = await graphQLClient(token).request(query, {id})\n\tconsole.log(res)\n\tconst data = await res\n\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tdata: data?.findLeagueByID,\n\t\tteams\n\t} }\n}\n\nexport default League"]},"metadata":{},"sourceType":"module"}