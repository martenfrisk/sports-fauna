{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marten.frisk/nextfauna/pages/index.tsx\";\n// import { gql } from 'graphql-request'\nimport Layout from '../components/layout'; // import { graphQLClient } from '../utils/graphql-client'\n\nimport { getAuthCookie } from '@/utils/auth-cookies';\n\nconst Home = ({\n  upcomingGames\n}) => {\n  console.log(upcomingGames); // if (error) return (\n  // \t<Layout>\n  // \t\t<div>Error...</div>\n  // \t</Layout>\n  // )\n  // const toggleTodo = async (id, completed) => {\n  // \tconst query = gql`\n  //     mutation PartialUpdateTodo($id: ID!, $completed: Boolean!) {\n  //       partialUpdateTodo(id: $id, data: { completed: $completed }) {\n  //         _id\n  //         completed\n  //       }\n  //     }\n  //   `\n  // \tconst variables = {\n  // \t\tid,\n  // \t\tcompleted: !completed,\n  // \t}\n  // \ttry {\n  // \t\tawait graphQLClient(token)\n  // \t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n  // \t\t\t.request(query, variables)\n  // \t\tmutate()\n  // \t} catch (error) {\n  // \t\tconsole.error(error)\n  // \t}\n  // }\n  // const deleteATodo = async (id) => {\n  // \tconst query = gql`\n  //     mutation DeleteATodo($id: ID!) {\n  //       deleteTodo(id: $id) {\n  //         _id\n  //       }\n  //     }\n  //   `\n  // \ttry {\n  // \t\tawait graphQLClient(token).request(query, { id })\n  // \t\tmutate()\n  // \t} catch (error) {\n  // \t\tconsole.error(error)\n  // \t}\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-full mx-auto\",\n      children: upcomingGames ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full sm:w-1/2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 font-light\",\n          children: \"Next 5 PL Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), upcomingGames.events.slice(0, 5).map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between w-full mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3\",\n            children: event.strHomeTeam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3\",\n            children: event.strAwayTeam\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3 text-sm\",\n            children: event.dateEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, event.idEvent, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getServerSideProps(ctx) {\n  const token = getAuthCookie(ctx.req);\n  const upcomingGames = await fetch('https://www.thesportsdb.com/api/v1/json/1/eventsnextleague.php?id=4328').then(res => res.json());\n  return {\n    props: {\n      token: token || null,\n      upcomingGames\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/marten.frisk/nextfauna/pages/index.tsx"],"names":["Layout","getAuthCookie","Home","upcomingGames","console","log","events","slice","map","event","strHomeTeam","strAwayTeam","dateEvent","idEvent","getServerSideProps","ctx","token","req","fetch","then","res","json","props"],"mappings":";;AAAA;AACA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+C;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ,EAD2D,CAG3D;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC,QAAC,MAAD;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,gBACEA,aAAa,gBACb;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACC;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEA,aAAa,CAACG,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCC,GAAjC,CAAsCC,KAAD,iBACrC;AAAyB,UAAA,SAAS,EAAC,+CAAnC;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACEA,KAAK,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBACED,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,kBAJD,eAOC;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBACEF,KAAK,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA,WAAUH,KAAK,CAACI,OAAhB;AAAA;AAAA;AAAA;AAAA,gBADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,gBAkBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA,CA9ED;;AAgFA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAA4C;AAClD,QAAMC,KAAK,GAAGf,aAAa,CAACc,GAAG,CAACE,GAAL,CAA3B;AACA,QAAMd,aAAa,GAAG,MAAMe,KAAK,CAAC,wEAAD,CAAL,CAAgFC,IAAhF,CAAqFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5F,CAA5B;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AACfN,MAAAA,KAAK,EAAEA,KAAK,IAAI,IADD;AAEfb,MAAAA;AAFe;AAAT,GAAP;AAIA;AAED,eAAeD,IAAf","sourcesContent":["// import { gql } from 'graphql-request'\nimport Layout from '../components/layout'\n// import { graphQLClient } from '../utils/graphql-client'\nimport { getAuthCookie } from '@/utils/auth-cookies'\n\nconst Home = ({ upcomingGames }: { upcomingGames: any }) => {\n\tconsole.log(upcomingGames)\n\n\t// if (error) return (\n\t// \t<Layout>\n\t// \t\t<div>Error...</div>\n\t// \t</Layout>\n\t// )\n\n\t// const toggleTodo = async (id, completed) => {\n\t// \tconst query = gql`\n\t//     mutation PartialUpdateTodo($id: ID!, $completed: Boolean!) {\n\t//       partialUpdateTodo(id: $id, data: { completed: $completed }) {\n\t//         _id\n\t//         completed\n\t//       }\n\t//     }\n\t//   `\n\n\t// \tconst variables = {\n\t// \t\tid,\n\t// \t\tcompleted: !completed,\n\t// \t}\n\n\t// \ttry {\n\t// \t\tawait graphQLClient(token)\n\t// \t\t\t.setHeader('X-Schema-Preview', 'partial-update-mutation')\n\t// \t\t\t.request(query, variables)\n\t// \t\tmutate()\n\t// \t} catch (error) {\n\t// \t\tconsole.error(error)\n\t// \t}\n\t// }\n\n\t// const deleteATodo = async (id) => {\n\t// \tconst query = gql`\n\t//     mutation DeleteATodo($id: ID!) {\n\t//       deleteTodo(id: $id) {\n\t//         _id\n\t//       }\n\t//     }\n\t//   `\n\n\t// \ttry {\n\t// \t\tawait graphQLClient(token).request(query, { id })\n\t// \t\tmutate()\n\t// \t} catch (error) {\n\t// \t\tconsole.error(error)\n\t// \t}\n\t// }\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"flex flex-col items-center w-full mx-auto\">\n\t\t\t\t{upcomingGames ? (\n\t\t\t\t\t<div className=\"w-full sm:w-1/2\">\n\t\t\t\t\t\t<p className=\"mb-2 font-light\">Next 5 PL Games</p>\n\t\t\t\t\t\t{upcomingGames.events.slice(0, 5).map((event) => (\n\t\t\t\t\t\t\t<div key={event.idEvent} className=\"flex items-center justify-between w-full mb-1\">\n\t\t\t\t\t\t\t\t<div className=\"w-1/3\">\n\t\t\t\t\t\t\t\t\t{event.strHomeTeam}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w-1/3\">\n\t\t\t\t\t\t\t\t\t{event.strAwayTeam}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"w-1/3 text-sm\">\n\t\t\t\t\t\t\t\t\t{event.dateEvent}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t): (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t)}\n\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport async function getServerSideProps(ctx: any) {\n\tconst token = getAuthCookie(ctx.req)\n\tconst upcomingGames = await fetch('https://www.thesportsdb.com/api/v1/json/1/eventsnextleague.php?id=4328').then(res => res.json())\n\treturn { props: { \n\t\ttoken: token || null,\n\t\tupcomingGames\n\t} }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}